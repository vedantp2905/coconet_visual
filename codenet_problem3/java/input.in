import java.util.Scanner; public class Main{ public static void main(String[] args) { Scanner kb=new Scanner(System.in); int size=kb.nextInt(); int a[][]=new int[size][3]; int x,y,z; for(int i=0;i<size;i++){ a[i][0]=kb.nextInt(); a[i][1]=kb.nextInt(); a[i][2]=kb.nextInt(); } for(int i=0;i<size;i++){ x=a[i][0]; y=a[i][1]; z=a[i][2]; if(x*x+y*y==z*z||y*y+z*z==x*x||z*z+x*x==y*y){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.io.*; import java.util.*; public class Main { public static void main(String[] argv) throws IOException { BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); int lines = Integer.parseInt(in.readLine()); for (int i = 0; i < lines; i++) { String s = in.readLine(); if (s == null) { break; } f(s); } /*/ f("4 3 5"); f("4 3 6"); f("8 8 8"); } public static void f(String s) { String[] sp = s.split(" "); int[] a = {Integer.parseInt(sp[0]), Integer.parseInt(sp[1]), Integer.parseInt(sp[2])}; Arrays.sort(a); System.out.println(Math.pow(a[2], 2) == Math.pow(a[0], 2) + Math.pow(a[1], 2) ? "YES" : "NO"); } }
import java.util.Scanner; public class Main { public static void main(String args[]){ Scanner sc = new Scanner(System.in); int N = sc.nextInt(); boolean tri[] = new boolean[N]; int a,b,c,x; for(int i = 0; i < N; i++){ a = sc.nextInt(); b = sc.nextInt(); c = sc.nextInt(); if(a < b){ x = a; a = b; b = x; } if(a < c){ x = a; a = c; c = x; } if(a*a == (b*b) + (c*c)){ tri[i] = true; } else { tri[i] = false; } } for(int i = 0; i < N; i++){ if(tri[i] == true){ System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.io.IOException; import java.util.Arrays; import java.util.Scanner; class Main { public static void main(String[] args)throws IOException { Scanner sc=new Scanner(System.in); int N=sc.nextInt(); int[] h=new int[3]; int max=0; String[] ans=new String[N]; for(int i=0;i<N;i++) { for(int j=0;j<3;j++) { h[j]=(int)Math.pow(sc.nextInt(),2); } Arrays.sort(h); ans[i]=(h[0]+h[1]==h[2])?"YES":"NO"; } for(String disp:ans) { System.out.println(disp); } } }
import java.util.*; public class Main { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int ary[] = new int[3]; int n = sc.nextInt(); while (n-- > 0) { for (int i = 0; i < ary.length; i++) ary[i] = sc.nextInt(); Arrays.sort(ary); int a = ary[0]; int b = ary[1]; int c = ary[2]; System.out.println((a*a + b*b == c*c) ? "YES" : "NO"); } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; public class Main { public static void main(String[] args) { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); String line; try { line = br.readLine(); int n = Integer.parseInt(line.trim()); for(int i=0; i<n; i++){ line = br.readLine(); String[] numbers = line.trim().split(" "); int[] sides = {Integer.parseInt(numbers[0]), Integer.parseInt(numbers[1]), Integer.parseInt(numbers[2])}; int maxSide = sides[0]>sides[1] && sides[0]>sides[2]? 0: sides[1]>sides[2]? 1: 2; int sum = 0; for(int j=0; j<3; j++){ if(j != maxSide){ sum += sides[j] * sides[j]; } } System.out.println(sides[maxSide] * sides[maxSide] == sum ? "YES": "NO"); } } catch (IOException e) { } } }
import java.util.*; public class Main { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int n=sc.nextInt(); for(int j=0;j<n;j++){ int tri[] = new int[3]; for(int i=0;i<3;i++){ tri[i]=sc.nextInt(); tri[i]*=tri[i]; } Arrays.sort(tri); if(tri[0]+tri[1]==tri[2]) System.out.println("YES"); else System.out.println("NO"); } } }
import java.util.Arrays; import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int n = sc.nextInt(); for(int i=0;i<n;i++) { int a = sc.nextInt(); int b = sc.nextInt(); int c = sc.nextInt(); System.out.println(isRightTriangle(a, b, c) ? "YES" : "NO"); } } public static boolean isRightTriangle(int a,int b,int c) { int[] x = new int[3]; x[0] = a; x[1] = b; x[2] = c; Arrays.sort(x); return x[0] * x[0] + x[1] * x[1] == x[2] * x[2]; } }
import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner scan = new Scanner(System.in); int in0 = scan.nextInt(); for (int i = 0; i < in0; i++) { int x = scan.nextInt(); int y = scan.nextInt(); int z = scan.nextInt(); int x2 = (int)Math.pow(x, 2); int y2 = (int)Math.pow(y, 2); int z2 = (int)Math.pow(z, 2); boolean sw = false; if(x2 == (y2 + z2))sw = true; if(y2 == (x2 + z2))sw = true; if(z2 == (y2 + x2))sw = true; if (sw) { System.out.println("YES"); } else System.out.println("NO"); } } }
import java.util.Scanner; public class Main{ public static void main(String[] args){ Scanner sc = new Scanner(System.in); int dataset = sc.nextInt(); int a, b, c; for(int i = 0; i < dataset; i++) { a = sc.nextInt(); b = sc.nextInt(); c = sc.nextInt(); if(judgeTriangle(a, b, c)) System.out.println("YES"); else System.out.println("NO"); } sc.close(); } static boolean judgeTriangle(int a, int b, int c) { int da = a * a; int db = b * b; int dc = c * c; if(da + db == dc) return true; else if(db + dc == da) return true; else if(dc + da == db) return true; else return false; } }
import java.util.Arrays; import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int count = Integer.valueOf(sc.next()); for (int i = 0; i < count; i++) { int[] nums = new int[]{ Integer.valueOf(sc.next()), Integer.valueOf(sc.next()), Integer.valueOf(sc.next()) }; Arrays.sort(nums); System.out.println(isRightTriangle(nums) ? "YES" : "NO"); } } public static boolean isRightTriangle(int[] nums) { return (nums[0] * nums[0]) + (nums[1] * nums[1]) == (nums[2] * nums[2]); } }
import java.util.Scanner; class Main { public static void main(String[] args) { Scanner scan = new Scanner(System.in); int times = scan.nextInt(); int[][] delta = new int[times][3]; for (int i = 0; i < times; i++) { int edge1 = scan.nextInt(); int edge2 = scan.nextInt(); int edge3 = scan.nextInt(); delta[i][0] = edge1; delta[i][1] = edge2; delta[i][2] = edge3; } for (int i = 0; i < times; i++) { if ((delta[i][0]) * (delta[i][0]) == (delta[i][1]) * (delta[i][1]) + (delta[i][2]) * (delta[i][2]) || (delta[i][1]) * (delta[i][1]) == (delta[i][0]) * (delta[i][0]) + (delta[i][2]) * (delta[i][2]) || (delta[i][2]) * (delta[i][2]) == (delta[i][0]) * (delta[i][0]) + (delta[i][1]) * (delta[i][1])) { System.out.println("YES"); } else { System.out.println("NO"); } } scan.close(); } }
import java.util.Scanner; class Main { public static void main(String args[]) { Scanner sc = new Scanner(System.in); int n = sc.nextInt(); for (int i = 0; i < n; i++) { int a = sc.nextInt(); int b = sc.nextInt(); int c = sc.nextInt(); System.out.println((a * a == b * b + c * c || b * b == a * a + c * c || c * c == a * a + b * b) ? "YES" : "NO"); } } }
import java.util.Scanner; class Main { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int n = sc.nextInt(); for(int i=0; i<n; i++) { int a = sc.nextInt(); int b = sc.nextInt(); int c = sc.nextInt(); if (a > b && a > c) { if(a*a == b*b + c*c) { System.out.println("YES"); continue; } } else if(b > a && b > c) { if(b*b == a*a + c*c) { System.out.println("YES"); continue; } } else if(c > a && c > b) { if(c*c == a*a + b*b) { System.out.println("YES"); continue; } } System.out.println("NO"); } } }
import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int num=sc.nextInt(); int i,a,b,c; for(i=0;i<num;i++){ a = sc.nextInt(); b = sc.nextInt(); c = sc.nextInt(); if(a*a == ((b*b) + (c*c)) || b*b == ((a*a) + (c*c)) || c*c == ((a*a) + (b*b))) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.ArrayList; import java.util.Arrays; import java.util.List; public class Main { public static void main(String[] args) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); try { String s; int input = Integer.parseInt(br.readLine()); List<String> rightAngleList = new ArrayList<String>(); for (int i = 1; i <= input; i++) { s = br.readLine(); String[] num = s.split(" "); Integer[] side = convertArray(num); Arrays.sort(side); if (side[2] * side[2] == side[1] * side[1] + side[0] * side[0]) { rightAngleList.add("YES"); } else { rightAngleList.add("NO"); } } String[] rightAngles = rightAngleList.toArray(new String[0]); for(String rightAngle : rightAngles){ System.out.println(rightAngle); } } finally { br.close(); } } public static Integer[] convertArray(String[] str) { List<Integer> list = new ArrayList<Integer>(); for (String num : str) { list.add(Integer.parseInt(num)); } return list.toArray(new Integer[0]); } }
import java.util.Scanner; import java.util.Arrays; public class Main { public static void main(String[] args) { Scanner cin = new Scanner(System.in); int n,t; int[] data = new int[3]; n = cin.nextInt(); while(n-- > 0) { for(int i=0; i<3; i++) { t = cin.nextInt(); data[i] = t*t; } Arrays.sort(data); if(data[0]+data[1] == data[2]) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.util.Arrays; import java.util.Scanner; class Main{ public static void main(String[] a){ Scanner sc = new Scanner(System.in); int N=sc.nextInt(); int[][] t=new int[N][3]; for(int i=0; i<N; i++){ for(int j=0; j<3; j++){ t[i][j]=sc.nextInt(); } } sort(t); for(int i=0; i<N; i++){ if(t[i][2]*t[i][2]==(t[i][1]*t[i][1]+t[i][0]*t[i][0])){ System.out.println("YES"); }else{ System.out.println("NO"); } } } public static void sort(int[][] t){ int [] s=new int[3]; for(int i=0; i<t.length; i++){ for(int j=0; j<3; j++){ s[j]=t[i][j]; } Arrays.sort(s); for(int k=0; k<3; k++){ t[i][k]=s[k]; } } } }
import java.util.*; import java.lang.*; import java.math.*; import java.io.*; import static java.lang.Math.*; import static java.util.Arrays.*; public class Main{ Scanner sc; static final int INF=1<<28; static final double EPS=1e-9; void run(){ sc=new Scanner(System.in); int n=sc.nextInt(); for(int k=0; k<n; k++){ int[] a=new int[3]; for(int i=0; i<3; i++) a[i]=sc.nextInt(); sort(a); if(a[0]*a[0]+a[1]*a[1]==a[2]*a[2]) println("YES"); else println("NO"); } sc.close(); } void print(String s){ System.out.print(s); } void println(String s){ System.out.println(s); } public static void main(String[] args){ new Main().run(); } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.ArrayList; import java.util.Collections; public class Main { public static void main(String[] args) { BufferedReader input = new BufferedReader(new InputStreamReader(System.in)); try { input.readLine(); } catch (IOException e1) { e1.printStackTrace(); } try { while (input.ready()) { String[] dataset = input.readLine().split(" "); System.out.println( isRightTriangle(Integer.valueOf(dataset[0]), Integer.valueOf(dataset[1]), Integer.valueOf(dataset[2]))); } } catch (IOException e) { e.printStackTrace(); } } public static String isRightTriangle(int a, int b, int c) { ArrayList<Integer> sideArray = new ArrayList<>(); sideArray.add(a); sideArray.add(b); sideArray.add(c); Collections.sort(sideArray); if (sideArray.get(0) * sideArray.get(0) + sideArray.get(1) * sideArray.get(1) == sideArray.get(2) * sideArray.get(2)) return "YES"; else return "NO"; } }
import java.io.*; class Main{ public static void main(String[] args) { try{ BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int i = Integer.parseInt(br.readLine()); for(int f=0;f<i;f++){ String[] str = br.readLine().split("\\s"); int a = Integer.parseInt(str[0]); a*=a; int b = Integer.parseInt(str[1]); b*=b; int c = Integer.parseInt(str[2]); c*=c; if(a+b==c||b+c==a||c+a==b) System.out.println("YES"); else System.out.println("NO"); } }catch(IOException e){} } }
import java.util.Arrays; import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int n = sc.nextInt(); while (n-- > 0) { int[] list = { sc.nextInt(), sc.nextInt(), sc.nextInt() }; Arrays.sort(list); System.out.println(list[0] * list[0] + list[1] * list[1] == list[2] * list[2] ? "YES" : "NO"); } sc.close(); } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Arrays; import java.util.HashMap; import java.util.Map; public class Main { private static final int NUMBER_OF_ELEMENT = 3; private static final int INDEX_X = 0; private static final int INDEX_Y = 1; private static final int INDEX_Z = 2; private static final Map<Boolean, String> printMap = new HashMap<Boolean, String>();; static { printMap.put(true, "YES"); printMap.put(false, "NO"); } public static void main(String[] args) throws IOException { int[][] triangleList = readTriangleList(); for (int i = 0; i < triangleList.length; i++) { boolean isTriangle = isRightTriangle(triangleList[i]); System.out.println(printMap.get(isTriangle)); } } protected static int[][] readTriangleList() throws IOException { BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); int numberOfLine = Integer.parseInt(reader.readLine()); int[][] triangleList = new int[numberOfLine][NUMBER_OF_ELEMENT]; for (int i = 0; i < triangleList.length; i++) { String[] lengthArray = reader.readLine().split(" "); for (int j = 0; j < lengthArray.length; j++) { triangleList[i][j] = Integer.parseInt(lengthArray[j]); } } if (reader != null) { reader.close(); } return triangleList; } protected static boolean isRightTriangle(int[] triangle) { Arrays.sort(triangle); int xx = (int)Math.pow(triangle[INDEX_X], 2); int yy = (int)Math.pow(triangle[INDEX_Y], 2); int zz = (int)Math.pow(triangle[INDEX_Z], 2); return ((xx + yy) == zz); } }
import java.util.Scanner; public class Main { private static int loop_num; static String rightTriangle(int a, int b, int c){ String judge = "NO"; if ((a*a)+(b*b) == (c*c) || (c*c) + (a*a) == (b*b) || (c*c) + (b*b) == (a*a)) { judge = "YES"; } return judge; } public static void main(String[] args) { Scanner stdIn = new Scanner(System.in); loop_num = stdIn.nextInt(); String[] result_triangle = new String[loop_num]; for (int i = 0;i < loop_num; i++) { result_triangle[i] = rightTriangle(stdIn.nextInt(), stdIn.nextInt(), stdIn.nextInt()); } for (String result: result_triangle) { System.out.println(result); } } }
import java.util.Scanner; class Main { public static void main(String[] args) { @SuppressWarnings("resource") Scanner sc = new Scanner(System.in); String ans[] = new String[1000]; int set = sc.nextInt(); int i = 0; for(; i<set; i++) { int a = sc.nextInt(); int b = sc.nextInt(); int c = sc.nextInt(); if(a*a==b*b+c*c || a*a+b*b==c*c || a*a+c*c==b*b) { ans[i] = "YES"; }else { ans[i] = "NO"; } } for(int j=0; j<i; j++) { System.out.println(ans[j]); } } }
import java.util.ArrayList; import java.util.List; import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner stdIn = new Scanner(System.in); List<String> list = new ArrayList<String>(); int number = stdIn.nextInt(); for(int i = 0; i < number; i++) { int a = (int) Math.pow(stdIn.nextInt(), 2); int b = (int) Math.pow(stdIn.nextInt(), 2); int c = (int) Math.pow(stdIn.nextInt(), 2); if (a + b == c || a + c == b || b + c == a) { list.add("YES"); } else { list.add("NO"); } } for (String str : list) { System.out.println(str); } } }
import java.util.*; class Main{ public static void main(String[] args){ Scanner sc = new Scanner(System.in); int n = sc.nextInt(); while(n!=0){ int[] num = new int[3]; int max = 0; for(int i=0; i<3; i++){ num[i] = sc.nextInt(); if(num[i]>max){max = num[i];} } int sum = 0; for(int i=0; i<3; i++){ if(num[i]!=max){ sum += num[i]*num[i]; } } String ans = "NO"; if(max*max==sum){ans = "YES";} System.out.println(ans); n--; } } }
import java.util.Scanner; class Main { public static void main(String[] a){ Scanner scan = new Scanner(System.in); int[] x, y, z; int swap; int n = scan.nextInt(); x = new int[n]; y = new int[n]; z = new int[n]; for(int i = 0; i < n; i++){ x[i] = scan.nextInt(); y[i] = scan.nextInt(); z[i] = scan.nextInt(); } for(int i = 0; i < n; i++){ if(x[i]*x[i] + y[i]*y[i] == z[i]*z[i] || x[i]*x[i] + z[i]*z[i] == y[i]*y[i] || z[i]*z[i] + y[i]*y[i] == x[i]*x[i]) System.out.println("YES"); else System.out.println("NO"); } } }
import java.io.*; import java.lang.reflect.Array; import java.util.Arrays; public class Main { public static void main(String[] args) { try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) { int num = Integer.parseInt(br.readLine()); for(int i = 0; i < num; i++){ String[] in = br.readLine().split(" ",0); int[] data = {Integer.parseInt(in[0]),Integer.parseInt(in[1]),Integer.parseInt(in[2])}; Arrays.sort(data); if(data[2] * data[2] == data[1] * data[1] + data[0] * data[0]){ System.out.println("YES"); }else { System.out.println("NO"); } } }catch (Exception e) { System.exit(0); } } }
import java.util.*; class Main { public static void main (String [] args){ printAns(); } static void isRightTriangle(int a, int b, int c){ if(a*a + b*b == c*c) System.out.println("YES"); else System.out.println("NO"); } static void printAns(){ Scanner sc = new Scanner(System.in); int set = sc.nextInt(); int[] triangle = new int[3]; for(int cnt=0; cnt<set; cnt++){ for(int i=0; i<triangle.length; i++){ triangle[i] = sc.nextInt(); } sort(triangle); isRightTriangle(triangle[0], triangle[1], triangle[2]); } } static void sort(int[] data){ int min, tmp; for(int i=0; i<data.length; i++){ min = i; for(int j=i+1; j<data.length; j++) if(data[min]>data[j]) min = j; tmp = data[i]; data[i] = data[min]; data[min] = tmp; } } }
import java.util.Scanner; import java.util.Arrays; class Main { static int square(int i){ return i * i; } public static void main(String[] args){ Scanner stdin = new Scanner(System.in); int limit = stdin.nextInt(); int[] num = new int[3]; for(int i = 0; i < limit; i++){ for(int j = 0; j < 3; j++){ num[j] = stdin.nextInt(); } Arrays.sort(num); System.out.println(square(num[0]) + square(num[1]) == square(num[2]) ? "YES" : "NO"); } } }
import java.util.Arrays; import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int number = sc.nextInt(); for (int i = 0; i < number; i++) { int []a = new int[3]; a[0] = sc.nextInt(); a[1] = sc.nextInt(); a[2] = sc.nextInt(); Arrays.sort(a); if (a[0] * a[0] + a[1] * a[1]==a[2] * a[2]) { System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.util.Scanner; import java.util.Arrays; class Main { public static boolean isRTri(int a, int b, int c) { return a * a + b * b == c * c; } public static void main(String[] args) { Scanner input = new Scanner(System.in); int n = input.nextInt(); for (int k = 1; k <= n; k++) { int a[] = new int [3]; for (int i = 0; i < 3; i++) { a[i] = input.nextInt(); } Arrays.sort(a); boolean r = isRTri(a[0], a[1], a[2]); System.out.printf("%s\n", r ? "YES" : "NO"); } } }
import java.util.*; public class Main { public static void main(String[] args) { Scanner s = new Scanner(System.in); int N = s.nextInt(); for(int tc = 0; tc < N; ++tc) { int[] len = new int[3]; for(int i = 0; i < 3; ++i) { len[i] = s.nextInt(); } Arrays.sort(len); if(len[0]*len[0] + len[1]*len[1] == len[2]*len[2]) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.ArrayList; import java.util.Arrays; class Main { public static void main(String[] args) { InputStreamReader is = new InputStreamReader(System.in); BufferedReader br = new BufferedReader(is); ArrayList<String> output = new ArrayList<String>(); String input; int n; try { n = Integer.parseInt(br.readLine()); for (int i = 0; i < n; i++) { input = br.readLine(); int[] sides = new int[3]; sides[0] = Integer.parseInt(input.split(" ")[0]); sides[1] = Integer.parseInt(input.split(" ")[1]); sides[2] = Integer.parseInt(input.split(" ")[2]); Arrays.sort(sides); if(sides[2]*sides[2]-sides[1]*sides[1]-sides[0]*sides[0]==0){ output.add("YES"); }else{ output.add("NO"); } } for (String i : output) { System.out.println(i); } } catch (IOException e) { System.out.println(e); } } }
import java.util.Scanner; import java.util.Arrays; public class Main { public static void main(String[] args){ Scanner sc = new Scanner(System.in); int z = sc.nextInt(); int[] num = new int[3]; for(int i = 0; i < z; i++){ for(int j = 0; j < num.length; j++){ num[j] = sc.nextInt(); } Arrays.sort(num); if(num[0]*num[0] + num[1]*num[1] == num[2]*num[2]){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.io.*; public class Main { public static void main(String args[]){ int n; int sides[] = new int[3]; boolean judge = false; String line; String tmp[]; BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); try{ line = reader.readLine(); n = Integer.parseInt(line); for(int i = 0; i < n; i++){ line = reader.readLine(); tmp = line.split(" "); for(int j = 0; j < sides.length; j++){ sides[j] = Integer.parseInt(tmp[j]); sides[j] *= sides[j]; } for(int j = 0; j < sides.length; j++){ if(sides[j%3] == sides[(j+1)%3] + sides[(j+2)%3]) { judge = true; break; }else judge = false; } Answer(judge); } }catch(IOException e){ System.exit(0); } } static void Answer(boolean j){ if(j) System.out.println("YES"); else System.out.println("NO"); } }
public class Main { public static void main(String[] args) {
import java.io.BufferedReader; import java.io.InputStreamReader; import java.util.Arrays; import java.util.StringTokenizer; public class Main { private final static String NEG = "NO\n"; private final static String AFF = "YES\n"; public static void main(String[] args) throws Exception { BufferedReader br = new BufferedReader(new InputStreamReader(System.in),1024); int number = Integer.parseInt(br.readLine()); int sides[] = new int[3]; StringTokenizer tknz; StringBuilder builder = new StringBuilder(); for (; 0 < number; number--) { tknz = new StringTokenizer(br.readLine()); for (int i = 0; i < 3; i++) { sides[i] = Integer.parseInt(tknz.nextToken()); } Arrays.sort(sides); if (sides[0] * sides[1] * sides[2] % 60 != 0) { builder.append(NEG); } else if (Math.pow(sides[0], 2) + Math.pow(sides[1], 2) != Math.pow(sides[2], 2)) { builder.append(NEG); } else { builder.append(AFF); } } System.out.print(builder); } }
import java.util.*; public class Main { public static void main(String[] args) { Scanner scan = new Scanner(System.in); int[] a =new int[3]; int b = scan.nextInt(); for (int j=0; j<b;j++){ for (int i=0; i<3; i++){ a[i]= scan.nextInt(); } Arrays.sort(a); if((Math.pow(a[0],2)+ Math.pow(a[1],2)) == (Math.pow(a[2],2))){ System.out.println("YES"); } else System.out.println("NO"); } } }
import java.util.Scanner; public class Main { void run() { Scanner sc = new Scanner(System.in); for (int T = sc.nextInt(); 0 < T; T--) { int a = sc.nextInt(); int b = sc.nextInt(); int c = sc.nextInt(); a *= a; b *= b; c *= c; if (a + b == c || a + c == b || b + c == a) { System.out.println("YES"); } else { System.out.println("NO"); } } } public static void main(String[] args) { new Main().run(); } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Arrays; class Main { public static void main(String[] args) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); String num1 = br.readLine(); StringBuilder bf = new StringBuilder(); int[] num = new int[3]; for(int i=0; i<Integer.parseInt(num1);i++){ String[] str = br.readLine().split(" "); for(int k=0; k<3; k++){ num[k] = Integer.parseInt(str[k]); } Arrays.sort(num); if(num[2]*num[2] == (num[1]*num[1])+(num[0]*num[0])){ bf.append("YES").append("\n"); }else { bf.append("NO").append("\n"); } } System.out.print(bf); } }
import java.util.Scanner; class Main { public static void main(String[] args) { Scanner in = new Scanner(System.in); int a, b, c, n, temp; Boolean is_changed = true; n = in.nextInt(); for (int i = 0; i < n; i++) { a = in.nextInt(); b = in.nextInt(); c = in.nextInt(); while (is_changed == true) { is_changed = false; if (a > b) { temp = a; a = b; b = temp; is_changed = true; } if (b > c) { temp = b; b = c; c = temp; is_changed = true; } } if (a * a + b * b - c * c == 0) { System.out.println("YES"); } else { System.out.println("NO"); } is_changed = true; } } }
import java.util.Arrays; import java.util.Comparator; import java.util.Scanner; public class Main { public static void main(String args[] ) throws Exception { Scanner scanner = new Scanner(System.in); while(scanner.hasNext()){ int count = scanner.nextInt(); for(int i = 0;i<count;i++){ double a = scanner.nextInt(); double b = scanner.nextInt(); double c = scanner.nextInt(); double d = a*a; double f = b*b; double g = c*c; if(d == f+g || f== d+g || g==d+f){ System.out.println("YES"); }else{ System.out.println("NO"); } } } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.ArrayList; import java.util.Arrays; import java.util.List; public class Main { private static final String DELIMITER_SPACE = " "; private static final String RESULT_RIGHT_TRIANGLE = "YES"; private static final String RESULT_NOT_RIGHT_TRIANGLE = "NO"; public static void main(String[] args) throws NumberFormatException, IOException { List<String[]> dataSets = getInput(); for (int i = 0; i < dataSets.size(); ++i) { System.out.println(getResult(dataSets.get(i))); } } private static String getResult(String[] dataSet) { int[] lengths = toIntArray(dataSet); Arrays.sort(lengths); boolean isRightTriangle = (getSquare(lengths[2]) == getSquare(lengths[0]) + getSquare(lengths[1])); if (isRightTriangle) { return RESULT_RIGHT_TRIANGLE; } else { return RESULT_NOT_RIGHT_TRIANGLE; } } private static int[] toIntArray(String[] stringArray) { int[] intArray = new int[stringArray.length]; for (int i = 0; i < stringArray.length; ++i) { intArray[i] = Integer.parseInt(stringArray[i]); } return intArray; } private static int getSquare(int target) { return target*target; } private static List<String[]> getInput() throws NumberFormatException, IOException { InputStreamReader streamReader = new InputStreamReader(System.in); BufferedReader bufferedReader = new BufferedReader(streamReader); List<String[]> dataSets = new ArrayList<String[]>(); try { int numberOfDataSets = Integer.parseInt(bufferedReader.readLine()); for (int i = 0; i < numberOfDataSets; ++i) { String[] dataSet = bufferedReader.readLine().split(DELIMITER_SPACE); dataSets.add(dataSet); } return dataSets; } finally { bufferedReader.close(); streamReader.close(); } } }
import java.util.*; class Main{ void solve(){ Scanner sc = new Scanner(System.in); int num = sc.nextInt(); while(num-->0){ int a = sc.nextInt(), b = sc.nextInt(), c = sc.nextInt(); if(a==0 && b==0 && c==0) break; double[] set = new double[3]; set[0] = a; set[1] = b; set[2] = c; Arrays.sort(set); boolean boo = false; if(set[0]==set[1] && set[0]*Math.sqrt(2)==set[2]) boo = true; if(set[0]*Math.sqrt(3)==set[1] && set[0]*2==set[2]) boo = true; for(int i=1; i<=set[2]; i++){ if(set[0]/i==3 && set[1]/i==4 && set[2]/i==5) boo = true; if(set[0]/i==5 && set[1]/i==12 && set[2]/i==13) boo = true; } if(boo) System.out.println("YES"); else System.out.println("NO"); } } public static void main(String[] args){ new Main().solve(); } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStream; import java.io.InputStreamReader; import java.util.ArrayDeque; import java.util.ArrayList; import java.util.Arrays; import java.util.Collections; import java.util.HashMap; import java.util.Stack; import java.util.Scanner; import java.util.Queue; class Main{ static final boolean DEBUG = false; static Scanner sc = new Scanner(new InputStreamReader(System.in)); static BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); public static void main(String args[]) throws Exception{ int n = parseInt(readLine()); for(int i = 0; i < n; i++){ int t[] = parseInt(readLine().split(" ")); Arrays.sort(t); t[0] *= t[0]; t[1] *= t[1]; t[2] *= t[2]; if(t[0] + t[1] == t[2]){ p("YES"); }else{ p("NO"); } } } public static String readLine() throws IOException{return br.readLine();} public static int readInt(){return sc.nextInt();} public static void pa(Object[] arr){System.out.println(Arrays.toString(arr));} public static void pa(int[] arr){System.out.println(Arrays.toString(arr));} public static void pa(double[] arr){System.out.println(Arrays.toString(arr));} public static void pa(boolean[] arr){System.out.println(Arrays.toString(arr));} public static void p(Object o){System.out.println(o.toString());} public static void d(Object o){if(DEBUG)System.out.println(o.toString());} public static void da(int[] arr){if(DEBUG)System.out.println(Arrays.toString(arr));} public static void sort(int[] a){Arrays.sort(a);} public static int[] parseInt(String[] arr){ int[] res = new int[arr.length]; for(int i = 0; i < arr.length; i++)res[i] = Integer.parseInt(arr[i]); return res; } public static int parseInt(Object o){return Integer.parseInt(o.toString());} public static int digit(int n){return String.valueOf(n).length();} } class MyHashMap<E> extends HashMap<E, Integer>{ ArrayList<E> keyArray = new ArrayList<E>(); public void add(E key){add(key, 1);} public void add(E key, Integer value){ if(containsKey(key)){ value += get(key); }else{ keyArray.add(key); } put(key, value); } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; public class Main{ public static void main(String argv[]) throws IOException { InputStreamReader is = new InputStreamReader(System.in); BufferedReader br = new BufferedReader(is); String str; String triangle_side_str[] = new String[3]; int max = 0; int remain[] = new int[2]; int triangle_side_int[] = new int[3]; int N = Integer.parseInt(br.readLine()); for (int j = 0; j < N; j++) { str = br.readLine(); remain[0] = 0; remain[1] = 0; max = 0; triangle_side_str = str.split(" "); for (int i = 0; i < 3; i++) { triangle_side_int[i] = Integer.parseInt(triangle_side_str[i]); if (max <= triangle_side_int[i]) { if (remain[1] == 0) remain[1] = max; else if (remain[0] == 0) remain[0] = max; max = triangle_side_int[i]; } else { if (remain[1] == 0) remain[1] = triangle_side_int[i]; else if (remain[0] == 0) remain[0] = triangle_side_int[i]; } } if (Math.pow(remain[0], 2) + Math.pow(remain[1], 2) == Math.pow(max, 2)) { System.out.println("YES"); } else System.out.println("NO"); } } }
class Main { public static void main( String[] args ) { java.util.Scanner sc = new java.util.Scanner( System.in ); int n = sc.nextInt(); while( n != 0 ) { n--; int a = sc.nextInt(); int b = sc.nextInt(); int c = sc.nextInt(); if( check( a, b, c ) ){ System.out.println( "YES" ); }else{ System.out.println( "NO" ); } } } static boolean check( int a, int b, int c ) { if( a*a == b*b + c*c )return true; if( b*b == c*c + a*a )return true; if( c*c == a*a + b*b )return true; return false; } }
import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner sc = new Scanner(System.in); String n = sc.nextLine(); int N = Integer.parseInt(n); for (int i = 0; i < N; i++) { String a = sc.nextLine(); String[] array = a.split(" "); String b = array[0]; String c = array[1]; int x = Integer.parseInt(array[0]); int y = Integer.parseInt(array[1]); int z = Integer.parseInt(array[2]); if(x*x + y*y == z*z){ System.out.println("YES"); }else if(x*x + z*z == y*y){ System.out.println("YES"); }else if(y*y + z*z == x*x){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.util.*; public class Main{ public static void main(String[] args){ new Main().run(); } Scanner sc = new Scanner(System.in); int a, b, c; void run(){ int n = sc.nextInt(); while(n-- > 0){ a = sc.nextInt(); b = sc.nextInt(); c = sc.nextInt(); a = a*a; b = b*b; c = c*c; if(a==(b+c) || b==(a+c) || c==(a+b)) System.out.println("YES"); else System.out.println("NO"); } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.ArrayList; import java.util.Collections; public class Main { public static void main(String[] args) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int n = Integer.parseInt(br.readLine()); for(int i = 0 ; i < n;i++){ String[] s = br.readLine().split(" "); ArrayList<Integer> list = new ArrayList<Integer>(); for(int j =0;j < s.length;j++){ list.add(Integer.parseInt(s[j])); } Collections.sort(list); int a = list.get(0); int b = list.get(1); int c = list.get(2); if(a*a + b*b == c*c){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.io.*; public class Main{ public static void main(String[]args)throws IOException{ BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int count = Integer.parseInt(br.readLine()); int[] data = new int[3]; for(int i=0; i<count; i++){ String[] str = br.readLine().split(" "); for(int k=0; k<3; k++){ data[k] = Integer.parseInt(str[k]); } int maxIndex = 0; for(int k=1; k<3; k++){ if(data[k]>data[maxIndex]){ maxIndex = k; } } int tmp = data[maxIndex]; data[maxIndex] = data[0]; data[0] = tmp; if(data[1] * data[1] + data[2] * data[2] == data[0] * data[0]){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner scan = new Scanner(System.in); int line = scan.nextInt(); int i = 1; while (i <= line) { int a = scan.nextInt(); int b = scan.nextInt(); int c = scan.nextInt(); if (a * a + b * b == c * c || b * b + c * c == a * a || a * a + c * c == b * b) { System.out.println("YES"); }else{ System.out.println("NO"); } i++; } } }
import java.util.*;public class Main{public static void main(String[]a){Scanner s=new Scanner(System.in);for(int t=s.nextInt();t-->0;){int[]l=new int[3];for(int i=0;i<3;i++)l[i]=s.nextInt();Arrays.sort(l);System.out.println(l[0]*l[0]+l[1]*l[1]==l[2]*l[2]?"YES":"NO");}}}
import java.util.*; import java.text.*; public class Main{ public static void main(String[] args){ Scanner sc = new Scanner(System.in); int n = Integer.parseInt(sc.nextLine()); String[] sArr; int[] iArr = new int[3]; while(n > 0){ sArr = sc.nextLine().split(" "); iArr[0] = Integer.parseInt(sArr[0]); iArr[1] = Integer.parseInt(sArr[1]); iArr[2] = Integer.parseInt(sArr[2]); Arrays.sort(iArr); if(Math.pow(iArr[2], 2) == Math.pow(iArr[0],2) + Math.pow(iArr[1],2)){ System.out.println("YES"); }else{ System.out.println("NO"); } n--; } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; public class Main { public static void main(String[] args) throws NumberFormatException, IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int n = Integer.parseInt(br.readLine()); for(int i = 0; i < n; i++){ String[] tmpStr = br.readLine().split(" "); int[] lineLength = new int[3]; int max = 0; int maxIndex = -1; for(int j = 0; j < 3; j++){ lineLength[j] = Integer.parseInt(tmpStr[j]); if(lineLength[j] > max){ max = lineLength[j]; maxIndex = j; } } int sum = 0; for(int j = 0; j < 3; j++){ int sq = lineLength[j] * lineLength[j]; if(j == maxIndex){ sum -= sq; } else { sum += sq; } } if(sum == 0){ System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.io.BufferedReader; import java.io.InputStreamReader; import java.util.Arrays; import java.util.StringTokenizer; public class Main { public static void main(String[] args) throws Exception { BufferedReader reader = new BufferedReader(new InputStreamReader( System.in)); StringBuilder builder = new StringBuilder(); StringTokenizer to; int[] nums = new int[3]; int a = Integer.parseInt(reader.readLine()); for (int i = 0; i < a; i++) { to = new StringTokenizer(reader.readLine()); for (int j = 0; j < 3; j++) { nums[j] = Integer.parseInt(to.nextToken()); } Arrays.sort(nums); if (Math.pow(nums[0], 2) + Math.pow(nums[1], 2) == Math.pow( nums[2], 2)) builder.append("YES\n"); else builder.append("NO\n"); } System.out.print(builder); } }
import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); int a = 0; int b = 0; int c = 0; int n = scanner.nextInt(); for(int i = 0; i < n; i++){ a = scanner.nextInt(); b = scanner.nextInt(); c = scanner.nextInt(); if(c * c == a * a + b * b || b * b == a * a + c * c || a * a == b * b + c * c){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner scan = new Scanner(System.in); String gyosu = scan.next(); int intgyosu = Integer.parseInt(gyosu); String[] yesno; yesno = new String[intgyosu]; for(int i = 1; i<=intgyosu; i++){ String num1 = scan.next(); int int1 = Integer.parseInt(num1); String num2 = scan.next(); int int2 = Integer.parseInt(num2); String num3 = scan.next(); int int3= Integer.parseInt(num3); int maxnum = Math.max(int1, int2); int max_num = Math.max(maxnum, int3); boolean hantei = false; if(max_num==int1){ hantei = (int2 * int2) + (int3 * int3) == (int1*int1); }else if(max_num==int2) { hantei = (int1 * int1) + (int3 * int3) == (int2*int2); }else if (max_num==int3){ hantei = (int2 * int2) + (int1 * int1) == (int3*int3); } if(hantei){ yesno[i-1] = "YES"; }else{ yesno[i-1] = "NO"; } } scan.close(); for(int j =0; j<intgyosu; j++){ System.out.println(yesno[j]); } } }
import java.util.Scanner; public class Main{ static boolean rightA(int a, int b, int c){ int max = a; if( b > a ){ int temp = a; a = b; b = temp; } if( c > a ){ int temp = a; a = c; c = temp; } if( a*a == b*b + c*c ) return true; else return false; } public static void main(String[] args){ Scanner stdIn = new Scanner(System.in); int n = stdIn.nextInt(); String[] str = new String[n+1]; String[][] s = new String[n][3]; int[] a = new int[n]; int[] b = new int[n]; int[] c = new int[n]; for(int i = 0; i < n+1; i++){ str[i] = stdIn.nextLine(); } for(int i = 0; i < n; i++){ s[i] = str[i+1].split(" ", 3); a[i] = Integer.parseInt(s[i][0]); b[i] = Integer.parseInt(s[i][1]); c[i] = Integer.parseInt(s[i][2]); } for(int i = 0; i < n; i++){ if( rightA(a[i], b[i], c[i]) ){ System.out.println("YES"); } else System.out.println("NO"); } } }
import java.util.Scanner; class Main{ public static void main(String[] x){ Scanner sc = new Scanner(System.in); short N = (short)Integer.parseInt(sc.nextLine()); short[] a = new short[N]; short[] b = new short[N]; short[] c = new short[N]; for(short i=0;i<N;i++){ String s = sc.nextLine(); a[i] = (short)Integer.parseInt((s.split(" ",0))[0]); b[i] = (short)Integer.parseInt((s.split(" ",0))[1]); c[i] = (short)Integer.parseInt((s.split(" ",0))[2]); } for(short i=0;i<N;i++){ if(isRightTriangle(a[i],b[i],c[i])){System.out.println("YES");} else{System.out.println("NO");} } } public static boolean isRightTriangle(int a, int b, int c){ return (a>=b&&a>=c&&a*a==b*b+c*c) ||(b>=c&&b>=a&&b*b==c*c+a*a) ||(c>=a&&c>=b&&c*c==a*a+b*b); } }
import java.util.Arrays; import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner in = new Scanner(System.in); int n = in.nextInt(); for(int i=0;i<n;i++){ int [] es = new int[3]; for(int j=0;j<3;j++) es[j] = in.nextInt(); Arrays.sort(es); if(sq(es[0]) + sq(es[1]) == sq(es[2])){ System.out.println("YES"); }else{ System.out.println("NO"); } } } static int sq(int x){ return x*x; }; }
import java.util.Scanner; public class Main { public static void main(String[] atgs){ Scanner sc; int y; int a; int b; int c; sc = new Scanner(System.in); y = sc.nextInt(); for(int i = 0;i < y ; i++){ a = sc.nextInt(); b = sc.nextInt(); c = sc.nextInt(); a = a * a; b = b * b; c = c * c; if(c == a + b){ System.out.println("YES"); }else if(b == a + c){ System.out.println("YES"); }else if(a == b + c){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.util.Arrays; import java.util.Scanner; public class Main { static Scanner sc = new Scanner(System.in); public static void main(String[] args) { int n = sc.nextInt(); int[][] box = new int[n][3]; for (int i = 0; i < n; i++) { for (int j = 0; j < 3; j++) { box[i][j] = sc.nextInt(); } } for (int i = 0; i < n; i++) { Arrays.sort(box[i]); int a = box[i][0]; int b = box[i][1]; int c = box[i][2]; if (c * c == a * a + b * b) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.util.*; import java.io.*; import java.awt.geom.*; import java.math.*; public class Main { static final Scanner in = new Scanner(System.in); static final PrintWriter out = new PrintWriter(System.out,false); static void solve() { int n = in.nextInt(); while (n-- > 0) { int a = in.nextInt(); int b = in.nextInt(); int c = in.nextInt(); if (a < b) { int t = a; a = b; b = t; } if (a < c) { int t = a; a = c; c = t; } out.println(a*a == b*b + c*c ? "YES" : "NO"); } } public static void main(String[] args) { long start = System.currentTimeMillis(); solve(); out.flush(); long end = System.currentTimeMillis(); in.close(); out.close(); } static void trace(Object... o) { System.out.println(Arrays.deepToString(o));} }
import java.util.ArrayList; import java.util.Collections; import java.util.List; import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); List<Integer> list = new ArrayList<Integer>(); int limit = Integer.parseInt(scanner.next()); for (int i = 0; i < limit; i++) { for (int j = 0; j < 3; j++) { list.add(Integer.parseInt(scanner.next())); } Collections.sort(list); Collections.reverse(list); int a = list.get(0); int b = list.get(1); int c = list.get(2); double cosA = getCosA(a, b, c); if (cosA == 0.0) { System.out.println("YES"); } else { System.out.println("NO"); } list.clear(); } } private static double getCosA(int a, int b, int c) { return (Math.pow(b, 2) + Math.pow(c, 2) - Math.pow(a, 2)) / (2 * b * c); } }
import java.io.*; class Main{ public static void main(String[] args)throws IOException{ BufferedReader br = new BufferedReader (new InputStreamReader(System.in)); String buf; int time; buf=br.readLine(); time=Integer.parseInt(buf); for(int i=0;i<time;i++){ int[] side =new int[3]; buf=br.readLine(); String[] buf2=buf.split(" "); for(int j=0;j<3;j++){ side[j]=Integer.parseInt(buf2[j]); } java.util.Arrays.sort(side); if((side[2]*side[2]-side[1]*side[1]-side[0]*side[0])==0){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.util.*; public class Main { public static void main(String[] args) { Scanner scanner=new Scanner(System.in); int N=scanner.nextInt(); int T[]=new int[3]; for(int i=0;i<N;i++){ for(int j=0;j<3;j++) T[j]=scanner.nextInt(); Arrays.sort(T); if(T[0]*T[0]+T[1]*T[1]==T[2]*T[2]){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.util.*; public class Main{ public static void main(String[] args) { Scanner scan=new Scanner(System.in); int n=scan.nextInt(); int[][]a=new int[n][3]; for(int j=0;j<n;j++) for(int l=0;l<3;l++) a[j][l]=scan.nextInt(); for(int i=0;i<n;i++) {Arrays.sort(a[i]); if(a[i][0]*a[i][0]+a[i][1]*a[i][1]==a[i][2]*a[i][2]) System.out.println("YES"); else System.out.println("NO"); } }}
import java.util.*; public class Main { public static void main(String...args) { Scanner sc = new Scanner(System.in); int N = sc.nextInt(); for(int i = 0; i < N; i++) { float[] x = new float[3]; x[0] = sc.nextFloat(); x[1] = sc.nextFloat(); x[2] = sc.nextFloat(); Arrays.sort(x); float a,b,c,d,e,f = 0; a = x[0]/3.0f; b = x[1]/4.0f; c = x[2]/5.0f; d = x[0]/5.0f; e = x[1]/12.0f; f = x[2]/13.0f; if(a == b && b == c) { System.out.println("YES"); } else if(d == e && e == f) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.util.Arrays; import java.util.Scanner; public class Main { public static void main(String[] args) { @SuppressWarnings("resource") Scanner sc = new Scanner(System.in); int num = sc.nextInt(); for (int i = 0; i < num; i++) { int[] inputNumList = new int[3]; inputNumList[0] = sc.nextInt(); inputNumList[1] = sc.nextInt(); inputNumList[2] = sc.nextInt(); Arrays.sort(inputNumList); if (inputNumList[0] * inputNumList[0] + inputNumList[1] * inputNumList[1] == inputNumList[2] * inputNumList[2]) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.util.Scanner; class Main{ public static void main(String args[]){ Scanner scan = new Scanner(System.in); int num = scan.nextInt(); int i,maxSide; int[] side = new int[3]; for(i=0;i<num;i++){ side[0] = scan.nextInt(); side[1] = scan.nextInt(); side[2] = scan.nextInt(); maxSide = Math.max(side[0],side[1]); maxSide = Math.max(maxSide,side[2]); if(maxSide == side[0]){ if(side[0]*side[0] == side[1]*side[1]+side[2]*side[2]){ System.out.println("YES"); }else{ System.out.println("NO"); } }else if(maxSide == side[1]){ if(side[1]*side[1] == side[0]*side[0]+side[2]*side[2]){ System.out.println("YES"); }else{ System.out.println("NO"); } }else{ if(side[2]*side[2] == side[0]*side[0]+side[1]*side[1]){ System.out.println("YES"); }else{ System.out.println("NO"); } } } } }
import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); int loopNum = scanner.nextInt(); for (int i = 0; i < loopNum; i++) { int a = scanner.nextInt(); int b = scanner.nextInt(); int c = scanner.nextInt(); if (isTriangle(a, b, c)) { System.out.println("YES"); } else { System.out.println("NO"); } } } private static boolean isTriangle(int a, int b, int c) { if ((a + b + c) % 4 != 0 && (a + b + c) % 12 != 0) { return false; } if (a >= b && a >= c) { return a * a == b * b + c * c; } else { if (b >= c) { return b * b == a * a + c * c; } else { return c * c == a * a + b * b; } } } }
import java.util.ArrayList; import java.util.Collections; import java.util.Comparator; import java.util.List; import java.util.Scanner; class Main { static List<Integer> list = new ArrayList<Integer>(); public static void main(String[] args) { Scanner scan = new Scanner(System.in); int n = scan.nextInt(); while (n != 0) { list.clear(); Collections.addAll(list, scan.nextInt(),scan.nextInt(),scan.nextInt()); list.sort(Comparator.reverseOrder()); if ((list.get(0) * list.get(0)) == ((list.get(1) * list.get(1)) + (list.get(2) * list.get(2)))) { System.out.println("YES"); }else{ System.out.println("NO"); } n--; } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; public class Main { public static void main(String[] a) throws IOException{ String strLine =""; BufferedReader stdReader = new BufferedReader(new InputStreamReader(System.in)); int i = 0; int max = 1000; String[] result = new String [max]; while ( i <= max && ((strLine = stdReader.readLine()) != null) ){ if(i == 0){ max = Integer.parseInt(strLine); }else{ String[] temp = strLine.split(" ",0); int[] tempInt = new int[3]; tempInt[0] = Integer.parseInt(temp[0]); tempInt[1] = Integer.parseInt(temp[1]); tempInt[2] = Integer.parseInt(temp[2]); result[i-1]=calc(tempInt); } i++; } if(i > 1){ for(int j = 0; j < max; j++){ System.out.println(result[j]); } } } public static String calc(int[] tempInt){ java.util.Arrays.sort(tempInt); if((tempInt[0]*tempInt[0])+(tempInt[1]*tempInt[1])==(tempInt[2]*tempInt[2])){ return "YES"; }else{ return "NO"; } } }
import java.util.Arrays; import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner sc = null; int[] triangle = new int[3]; try { sc = new Scanner(System.in); int numQ = sc.nextInt(); for (int i = 0; i < numQ; i++) { for (int j = 0; j < triangle.length; j++) { triangle[j] = sc.nextInt(); } Arrays.sort(triangle); if (Math.pow(triangle[0], 2) + Math.pow(triangle[1], 2) == Math.pow(triangle[2], 2)) { System.out.println("YES"); }else{ System.out.println("NO"); } } }catch (Exception e) { System.out.println(e); } finally { if (sc != null) { try { sc.close(); } catch (Exception e) { } } } } }
import java.util.ArrayList; import java.util.Collections; import java.util.Comparator; import java.util.Scanner; public class Main { static Scanner sc = new Scanner(System.in); public static void main(String[] args) { int n = sc.nextInt(); ArrayList<Integer> side = new ArrayList<Integer>(); for (int i = 0; i < n; i++) { for (int j = 0; j < 3; j++) { side.add(sc.nextInt()); } judgeRightTri(side); side.clear(); } } private static void judgeRightTri(ArrayList<Integer> side) { Collections.sort(side, Comparator.reverseOrder()); if ( Math.pow(side.get(0), 2) == Math.pow(side.get(1), 2) + Math.pow(side.get(2), 2) ) { System.out.println("YES"); } else { System.out.println("NO"); } } }
import java.util.Scanner; public class Main { static boolean isRight(int a, int b, int c) { if (a * a + b * b == c * c || a * a + c * c == b * b || b * b + c * c == a * a) { return true; } else return false; } public static void main(String[] args) { Scanner scan = new Scanner(System.in); int n = scan.nextInt(); int a,b,c; for(int i=0;i<n;i++){ a=scan.nextInt(); b=scan.nextInt(); c=scan.nextInt(); if(isRight(a,b,c)==true) System.out.println("YES"); else System.out.println("NO"); } } }
import java.io.BufferedReader; import java.io.InputStreamReader; import java.lang.Exception; import java.lang.Integer; import java.lang.System; import java.util.Arrays; import java.util.StringTokenizer; public class Main { public static void main(String[] a){ try { BufferedReader r = new BufferedReader(new InputStreamReader(System.in)); int n = Integer.parseInt(r.readLine()); StringTokenizer st; int side[] = new int[3]; for(int i = 0; i < n; i++) { st = new StringTokenizer(r.readLine()); for(int j = 0; j < 3; j++) { side[j] = Integer.parseInt(st.nextToken()); } Arrays.sort(side); if((side[0]*side[0] + side[1]*side[1]) == side[2]*side[2]) { System.out.println("YES"); } else { System.out.println("NO"); } } } catch (Exception ex) { System.exit(0); } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Arrays; public class Main { public static void main(String[] args) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); String r = br.readLine(); int n = Integer.valueOf(r); while (n > 0 && (r = br.readLine()) != null) { String[] s = r.split(" "); int[] e = { (int) Math.pow(Integer.valueOf(s[0]), 2), (int) Math.pow(Integer.valueOf(s[1]), 2), (int) Math.pow(Integer.valueOf(s[2]), 2) }; Arrays.sort(e); System.out.println(((e[0] + e[1]) == e[2]) ? "YES" : "NO"); n--; } } }
import java.io.*; import java.util.*; public class Main { public static void main(String[] args) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int N = Integer.parseInt(br.readLine()); for(int i=0;i<N;i++) { String[] lc = br.readLine().split(" "); int a = Integer.parseInt(lc[0]); int b = Integer.parseInt(lc[1]); int c = Integer.parseInt(lc[2]); if(a*a+b*b==c*c || b*b+c*c==a*a || c*c+a*a==b*b) { System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.util.ArrayList; import java.util.Collections; import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner input = new Scanner(System.in); int x =input.nextInt(); for (int i = 0; i < x; i++) { ArrayList<Integer> out = new ArrayList<Integer>(); for (int j = 0; j < 3; j++) { out.add(input.nextInt()); } Collections.sort(out); System.out.println(Math.pow(out.get(out.size()-1), 2)==Math.pow(out.get(0), 2)+Math.pow(out.get(1), 2)?"YES":"NO"); } } }
import java.util.Scanner; public class Main { public static void main(String[] args) { try (Scanner in = new Scanner(System.in)) { solve(in); } } private static void solve(Scanner in) { int N = in.nextInt(); while (N-- > 0) { int a = in.nextInt(), b = in.nextInt(), c = in.nextInt(); int A = a * a, B = b * b, C = c * c; boolean isRight; if (A > B && A > C) { isRight = A == B + C; } else if (B > A && B > C) { isRight = B == A + C; } else { isRight = C == A + B; } System.out.println(isRight ? "YES" : "NO"); } } }
import java.util.*; public class Main{ public static void main(String[] args){ Scanner sc = new Scanner(System.in); int n = sc.nextInt(); int x; for(int i=0;i<n;i++){ int a = sc.nextInt(); int b = sc.nextInt(); int c = sc.nextInt(); if(a>b && a>c){ x = a; a = c; c = x; }else if(b>a && b>c){ x = b; b = c; c = x; } if(a*a+b*b == c*c){System.out.println("YES");} else{System.out.println("NO");} } } }
import java.io.*; import java.util.*; class Main{ public static void main(String[] args) throws IOException{ BufferedReader r = new BufferedReader(new InputStreamReader(System.in)); String s; StringTokenizer st; int i,a,b,c; try { s = r.readLine(); int number = Integer.parseInt(s); for(i=0;i<number;i++){ s = r.readLine(); st = new StringTokenizer(s," "); a = Integer.parseInt(st.nextToken().toString()); b = Integer.parseInt(st.nextToken().toString()); c = Integer.parseInt(st.nextToken().toString()); if((a*a+b*b==c*c)||(b*b+c*c==a*a)||(c*c+a*a==b*b)){ System.out.println("YES"); } else { System.out.println("NO"); } } } catch (NoSuchElementException e) { System.exit(0); } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; public class Main { public static int[] sort(int[] nums){ for(int h=nums.length-1;h>0;h--){ for(int i=1;i<=h;i++){ if(nums[i]>nums[i-1]){ int tmp=nums[i]; nums[i]= nums[i-1]; nums[i-1]=tmp; } } } return nums; } public static void main(String[] a) { BufferedReader br; br = new BufferedReader(new InputStreamReader(System.in)); String str; try { str = br.readLine(); int setNum=Integer.parseInt(str); for (int h = 0; h < setNum; h++) { int[] num = new int[3]; str = br.readLine(); String[] numbers =str.split(" "); for (int i = 0; i < numbers.length; i++) { num[i] = Integer.parseInt(numbers[i]); } num =sort(num); int answer = (int)Math.pow(num[1], 2)+(int)Math.pow(num[2], 2); if(answer==(Math.pow(num[0], 2))){ System.out.println("YES"); }else { System.out.println("NO"); } } } catch (IOException e) { e.printStackTrace(); } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; public class Main { public static void main(String[] args) { try { int a; int b; int c; BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); String s = new String(reader.readLine()); int setsu = Integer.parseInt(s); for(int i=1;i<=setsu;i++){ String Tri = new String(reader.readLine()); String[] result1 = Tri.split(" "); a = Integer.parseInt(result1[0]); b = Integer.parseInt(result1[1]); c = Integer.parseInt(result1[2]); if(((a*a)+(b*b)==(c*c))||((c*c)+(b*b)==(a*a))||((a*a)+(c*c)==(b*b))) { System.out.println("YES"); }else { System.out.println("NO"); } } } catch (IOException e) { } } }
import java.util.ArrayList; import java.util.List; import java.util.Scanner; class Main { public static void main(String[] args) { Scanner sc = new Scanner(System.in); List<String> ret = new ArrayList<String>(); int i, max = sc.nextInt(); for (i = 0; i < max; i++) { double a = Math.pow(sc.nextInt(), 2); double b = Math.pow(sc.nextInt(), 2); double c = Math.pow(sc.nextInt(), 2); if (a + b == c || b + c == a || a + c == b) { ret.add("YES"); } else { ret.add("NO"); } } for (String text : ret) { System.out.println(text); } } }
import java.util.Scanner; public class Main { static Scanner sc = new Scanner(System.in); static int n, m, i=0; static int a[] = new int[3]; public static void main(String[] args) { while(read()) { solve(); } } static boolean read(){ if(!sc.hasNext()) return false; if(n == m) n = sc.nextInt(); a[i] = sc.nextInt(); i++; return true; } static void solve(){ if(i != 3) return; System.out.println((a[0] * a[0] == a[1] * a[1] + a[2] * a[2] || a[1] * a[1] == a[0] * a[0] + a[2] * a[2] || a[2] * a[2] == a[0] * a[0] + a[1] * a[1]) ?"YES":"NO"); i=0; } }
import java.util.Scanner; public class Main { public static void main(String[] args){ Scanner stdIn = new Scanner(System.in); int n = stdIn.nextInt(); for(int i=0;i<n;i++){ int a = stdIn.nextInt(); int b = stdIn.nextInt(); int c = stdIn.nextInt(); if(a<b){ if(b<c){ func(c,a,b); } else{ func(b,a,c); } } else{ if(a<c){ func(c,a,b); } else{ func(a,b,c); } } } } static void func(int a,int b,int c){ if(Math.pow(a,2) == (Math.pow(b,2)+Math.pow(c,2))){ System.out.println("YES"); } else{ System.out.println("NO"); } } }
import java.util.Arrays; import java.util.Scanner; import static java.lang.Math.*; class Main{ public static void main(String[] args) { Scanner sc = new Scanner(System.in); int n=sc.nextInt(); int temp[]=new int[3]; for(int i = 0;i < n; i++){ for(int j = 0;j < 3; j++) temp[j]=sc.nextInt(); Arrays.sort(temp); if(temp[0]*temp[0]+temp[1]*temp[1]==temp[2]*temp[2])System.out.println("YES"); else System.out.println("NO"); } } }
import java.io.*; public class Main { public static void main(String[] args) throws IOException { BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); int n = Integer.parseInt(reader.readLine()); for(int i = 0; i < n; i++) { String s = reader.readLine(); String[] sp = s.split(" "); int a = Integer.parseInt(sp[0]); int b = Integer.parseInt(sp[1]); int c = Integer.parseInt(sp[2]); if (a*a+b*b==c*c || a*a+c*c==b*b || b*b+c*c==a*a) { System.out.printf("YES\n"); } else { System.out.printf("NO\n"); } } reader.close(); } }
import java.util.Scanner; public class Main { public static void main(String[] args) { int n1; int n2; int n3; int date; Scanner scan = new Scanner(System.in); date = scan.nextInt(); for(int i = 0 ; i < date ;i++){ n1 = scan.nextInt(); n2 = scan.nextInt(); n3 = scan.nextInt(); if(n3 * n3 == n2*n2+n1*n1){ System.out.println("YES"); }else if(n2 * n2 == n3 * n3 + n1 * n1){ System.out.println("YES"); }else if(n1 * n1 == n3 * n3 + n2 * n2){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Arrays; public class Main { public static void main(String[] args) throws IOException{ BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); String f = br.readLine(); int[] a = new int[3]; for(int i = 0 ; i < Integer.parseInt(f) ; i++){ String str = br.readLine(); String[] stra = str.split(" "); for(int j = 0 ; j < 3 ; j++){ a[j] = Integer.parseInt(stra[j]); } Arrays.sort(a); if(Math.pow(a[0],2) + Math.pow(a[1],2) == Math.pow(a[2],2)){ System.out.println("YES"); }else { System.out.println("NO"); } } } }
import java.util.Scanner; public class Main{ public static void main(String[] args){ Scanner kb = new Scanner(System.in); int i, N, x, y, z, longest; N = kb.nextInt(); for(i = 0 ; i < N ; i++){ x = kb.nextInt(); y = kb.nextInt(); z = kb.nextInt(); longest = x; if (longest < y){ longest = y; } if (longest < z){ longest = z; } if (longest == x){ if ((x * x) == (y * y + z * z)){ System.out.println("YES"); } else{ System.out.println("NO"); } } else if (longest == y){ if ((y * y) == (x * x + z * z)){ System.out.println("YES"); } else{ System.out.println("NO"); } } else if (longest == z){ if ((z * z) == (x * x + y * y)){ System.out.println("YES"); } else{ System.out.println("NO"); } } } } }
import java.util.*; import java.io.*; public class Main { public static void main(String[] args) { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); try { int x = Integer.parseInt(br.readLine()); int i = 0; while (i < x) { String str = br.readLine(); String[] num = str.split(" ", 0); ArrayList<Integer> al = new ArrayList<>(); for (int j = 0; j < 3; j++) { al.add(Integer.parseInt(num[j])); } Collections.sort(al); int a = al.get(0); int b = al.get(1); int c = al.get(2); if(c*c==a*a+b*b){ System.out.println("YES"); }else{ System.out.println("NO"); } i++; } } catch (IOException ex) { System.out.println("error"); } } }
import java.util.ArrayList; import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner scan = new Scanner(System.in); int N = Integer.valueOf(scan.nextLine()); while (N-- > 0) { String[] data = scan.nextLine().split(" ", 0); int num[] = new int[3]; for (int i = 0; i < 3; i++) { num[i] = Integer.parseInt(data[i]); } num = sortInteger(num); if (Math.pow(num[0], 2) == Math.pow(num[1], 2) + Math.pow(num[2], 2)) { System.out.println("YES"); } else { System.out.println("NO"); } } } public static int[] sortInteger(int[] num) { int len = num.length; for (int i = 0; i < len; i++) { for (int j = i+1; j < len; j++) { if (num[i] < num[j]) { int tmp = num[i]; num[i] = num[j]; num[j] = tmp; } } } return num; } }
import java.util.Scanner; class Main { public static void main(String[] args) { Scanner scan = new Scanner(System.in); int n = scan.nextInt(); int x, y, z; int yn[] = new int[n]; for(int i = 0; i < n; i++){ x = scan.nextInt(); y = scan.nextInt(); z = scan.nextInt(); if(x*x + y*y == z*z || x*x + z*z == y*y || y*y + z*z == x*x)yn[i] = 1; } for(int i = 0; i < n; i++){ if(yn[i] == 1)System.out.println("YES"); else System.out.println("NO"); } } }
import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int n = sc.nextInt(); while(n-- != 0){ int a[] = new int[3]; for(int i = 0; i < 3; i++){ a[i]=(int)Math.pow(sc.nextInt(), 2); } System.out.println((a[0]+a[1]==a[2]||a[0]+a[2]==a[1]||a[2]+a[1]==a[0])?"YES":"NO"); } } }
import java.util.Scanner; import java.util.Vector; import java.util.Collections; class Main { public static void main(String[] av) { Scanner sc = new Scanner( System.in ); int num = sc.nextInt(); Vector<Boolean> bools = new Vector<Boolean>(); for ( int i = 0; i < num; ++i ) { Vector<Integer> ps = new Vector<Integer>(); for ( int j = 0; j < 3; j++ ) { ps.add( sc.nextInt() ); } Collections.sort( ps ); if ( ps.get(0)*ps.get(0) + ps.get(1)*ps.get(1) == ps.get(2)*ps.get(2) ) { bools.add( true ); } else { bools.add( false ); } } for ( Boolean bool: bools ) { if ( bool ) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.util.*; public class Main{ public static void main(String[] args) { new Main().run(); } public void run() { Scanner sc = new Scanner(System.in); int n; n = sc.nextInt(); while(n-->0){ int x,y,z; x = sc.nextInt(); y = sc.nextInt(); z = sc.nextInt(); int a,b,c; a = Math.min(x,Math.min(y,z)); c = Math.max(x,Math.max(y,z)); b = x+y+z-a-c; System.out.println(a*a+b*b==c*c?"YES":"NO"); } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; public class Main { public static void main(String[] args) { BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); try { int lim = Integer.parseInt(in.readLine()); for (int i = 0; i < lim; i++) { String[] values = in.readLine().split(" "); int a = Integer.parseInt(values[0]); int b = Integer.parseInt(values[1]); int c = Integer.parseInt(values[2]); int x = a * a; int y = b * b; int z = c * c; if (((x + y) == z) || ((y + z) == x) || ((z + x) == y)) System.out.println("YES"); else System.out.println("NO"); } } catch (NumberFormatException e) { e.printStackTrace(); } catch (IOException e) { e.printStackTrace(); } } }
public class Main { public static void main ( String[ ] args ) { java.util.Scanner cin = new java.util.Scanner ( System.in ); int n; for ( n = cin.nextInt ( ); n != 0; --n ) { int[ ] a = { cin.nextInt ( ), cin.nextInt ( ), cin.nextInt ( ) }; java.util.Arrays.sort ( a ); System.out.println ( a[ 0 ] * a[ 0 ] + a[ 1 ] * a[ 1 ] == a[ 2 ] * a[ 2 ] ? "YES" : "NO" ); } return ; } }
import java.util.Scanner; import java.util.ArrayList; import java.util.*; public class Main { public static void main(String args[]) { Scanner input=new Scanner(System.in); ArrayList<String> list=new ArrayList<String>(); int cases=input.nextInt(); if(cases>=1 && cases<=1000) { for(int i=0;i<cases;i++) { int a=input.nextInt(); int b=input.nextInt(); int c=input.nextInt(); if(a>=1 && b>=1 && c>=1 && a<=1000 && b<=1000 && c<=1000) { ArrayList<Integer> list1=new ArrayList<Integer>(); list1.add(a); list1.add(b); list1.add(c); Collections.sort(list1); Double d=Math.pow(list1.get(0),2); Double e=Math.pow(list1.get(1),2); Double f=Math.pow(list1.get(2),2); if(d+e==f) { list.add("YES"); }else list.add("NO"); } } for(int i=0;i<list.size();i++) { System.out.println(list.get(i)); } } } }
import java.io.*; import java.util.*; class Main { public static void main(String[] args) { int N; Scanner sc = new Scanner(System.in); N = sc.nextInt(); for (int i = 0; i < N; i++) { int a,b,c; a = sc.nextInt(); b = sc.nextInt(); c = sc.nextInt(); if (a+b > c && a+c > b && b+c > a) { if (a*a+b*b == c*c || a*a+c*c==b*b || b*b+c*c==a*a) { System.out.println("YES"); } else { System.out.println("NO"); } } else { System.out.println("NO"); } } } }
import java.util.*; import java.util.Scanner ; import java.math.BigInteger; public class Main { public static void main(String[] args) { int t,n1,n2,n3; int [] a = new int[3]; Scanner sc = new Scanner(System.in); t = sc.nextInt(); while(t>0){ t--; n1 = sc.nextInt(); n2 = sc.nextInt(); n3 = sc.nextInt(); a[0] = n1 ; a[1] = n2 ; a[2]=n3; Arrays.sort(a); System.out.println((a[2]*a[2]==a[0]*a[0]+a[1]*a[1])? "YES" : "NO" ); } } }
import java.util.*; import java.io.*; public class Main { static Scanner sc = new Scanner(System.in); static InputStreamReader reader = new InputStreamReader(System.in); static int n, a, b, c; static int A,B,C; public static void main(String[] args) { read(); } static boolean read(){ n = sc.nextInt(); int i; for(i = 0; i < n; i++){ a = sc.nextInt(); b = sc.nextInt(); c = sc.nextInt(); if(a == 0 || b == 0 || c == 0){ System.out.println("NO"); } if(a != 0 && b != 0 && c!= 0){ A = a * a; B = b * b; C = c * c; if(A == B + C){ System.out.println("YES"); }else if(B == A + C){ System.out.println("YES"); }else if(C == A + B){ System.out.println("YES"); }else{ System.out.println("NO"); } } } return true; } }
import java.io.*; import java.util.*; public class Main { public static void main(String[] args) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); try{ int n = Integer.parseInt(br.readLine()); for(int i=0;i<n;i++){ String st = br.readLine(); String[] s = st.split(" ",0); int[] k = new int[3]; k[0]=Integer.parseInt(s[0]); k[1]=Integer.parseInt(s[1]); k[2]=Integer.parseInt(s[2]); Arrays.sort(k); if(k[2]*k[2]==(k[1]*k[1])+(k[0]*k[0])){ System.out.println("YES"); }else{ System.out.println("NO"); } } }catch (Exception ex){ System.exit(0); } } }
import java.util.ArrayList; import java.util.Collections; import java.util.Scanner; class Main { public static void main(String args[]) { Scanner sc = new Scanner(System.in); int noDataSet = sc.nextInt(); for (int i = 0; i < noDataSet; i++) { ArrayList<Integer> nums = new ArrayList<Integer>(); nums.add(sc.nextInt()); nums.add(sc.nextInt()); nums.add(sc.nextInt()); Collections.sort(nums); int a = nums.get(0); int b = nums.get(1); int c = nums.get(2); if (Math.pow(a, 2) + Math.pow(b, 2) == Math.pow(c, 2)) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.util.Scanner; class Main { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int count = sc.nextInt(); if (count <= 1000) { String[] triangles = new String[count]; for (int j = 0; j < count; j++) { int side1 = sc.nextInt(); int side2 = sc.nextInt(); int side3 = sc.nextInt(); if (side1 >= 1 && side1 <= 1000) { if (side2 >= 1 && side2 <= 1000) { if (side3 >= 1 && side3 <= 1000) { String result = isRightTriangle(side1, side2, side3); triangles[j] = result; } } } } for (int k = 0; k < count; k++) { System.out.println(triangles[k]); } } } private static String isRightTriangle(int s1, int s2, int s3) { String test = "NO"; if ((s1 * s1) == (s2 * s2) + (s3 * s3)) { test = "YES"; } else if ((s2 * s2) == (s1 * s1) + (s3 * s3)) { test = "YES"; } else if ((s3 * s3) == (s1 * s1) + (s2 * s2)) { test = "YES"; } return test; } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.ArrayList; import java.util.Arrays; import java.util.List; public class Main { private static final String DELIMITER_SPACE = " "; public static void main(String[] args) throws NumberFormatException, IOException { List<String[]> dataSets = new ArrayList<String[]>(); int countOfDataSet = getInput(dataSets); for (int i = 0; i < countOfDataSet; ++i) { System.out.println(getResult(dataSets.get(i))); } } private static String getResult(String[] dataSets) { int[] lengths = new int[3]; toIntArray(3, lengths, dataSets); Arrays.sort(lengths); if (isRightTriangle(lengths)) { return "YES"; } else { return "NO"; } } private static boolean isRightTriangle(int[] lengths) { if (lengths[2] * lengths[2] == lengths[0] * lengths[0] + lengths[1] * lengths[1]) { return true; } return false; } private static void toIntArray(int lengthOfArray, int[] intArray, String[] stringArray) { for (int i = 0; i < lengthOfArray; ++i) { intArray[i] = Integer.parseInt(stringArray[i]); } } private static int getInput(List<String[]> target) throws NumberFormatException, IOException { InputStreamReader streamReader = new InputStreamReader(System.in); BufferedReader bufferedReader = new BufferedReader(streamReader); String line = null; boolean isFirst = true; int numberOfDataSet = 0; try { while ((line = bufferedReader.readLine()) != null) { if (isFirst) { numberOfDataSet = Integer.parseInt(line); isFirst = false; } else { String[] lengths = line.split(DELIMITER_SPACE); target.add(lengths); } } return numberOfDataSet; } finally { bufferedReader.close(); streamReader.close(); } } }
import java.io.BufferedReader; import java.io.InputStreamReader; import java.util.*; import java.math.*; public class Main { public static void main(String[] args) throws Exception { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int count = Integer.parseInt(br.readLine()); for(int i=0;i<count;i++) { String[] line = br.readLine().split(" "); List<Integer> list = new ArrayList<Integer>(); list.add(new Integer(line[0])); list.add(new Integer(line[1])); list.add(new Integer(line[2])); Collections.sort(list); double cor = Math.sqrt(Math.pow(list.get(0).doubleValue(),2) + Math.pow(list.get(1).doubleValue(),2)); double ex = list.get(2).doubleValue(); if(cor == ex) System.out.println("YES"); else System.out.println("NO"); } } }
import java.io.IOException; import java.util.Scanner; import java.util.Arrays; public class Main { public static void main(String[] args) throws IOException { Scanner sc = new Scanner(System.in); int n = sc.nextInt(); for (int i = 0; i < n; i++){ int a[] = new int[3]; for (int j = 0; j < 3; j++){ a[j] = sc.nextInt(); } Arrays.sort(a); if (a[0]*a[0] + a[1]*a[1] == a[2]*a[2]){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.io.*; import java.util.*; public class Main{ public static void main(String args[]){ BufferedReader br=new BufferedReader(new InputStreamReader(System.in)); try{ String str=br.readLine(); int n[]=new int[3]; while((str=br.readLine())!=null){ StringTokenizer st=new StringTokenizer(str); for(int i=0;i<=2;i++){ n[i]=Integer.parseInt(st.nextToken()); } Arrays.sort(n); int a=(int)Math.pow(n[0],2); int b=(int)Math.pow(n[1],2); int c=(int)Math.pow(n[2],2); if(a+b==c){ System.out.println("YES"); }else{ System.out.println("NO"); } } }catch(Exception ex){ } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Arrays; public class Main { private static final String RIGHT_TRIANGLE = "YES"; private static final String NOT_RIGHT_TRIANGLE = "NO"; public static void main(String[] args) throws NumberFormatException, IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int lineCount = Integer.parseInt(br.readLine()); for (int i = 0; i < lineCount; i++) { String[] input = br.readLine().split(" "); int[] side = { Integer.parseInt(input[0]), Integer.parseInt(input[1]), Integer.parseInt(input[2])}; Arrays.sort(side); if (isRightTriangle(side[2], side[0], side[1])) { System.out.println(RIGHT_TRIANGLE); } else { System.out.println(NOT_RIGHT_TRIANGLE); } } } private static boolean isRightTriangle(int side1, int side2, int side3) { return (side1 * side1 == side2 * side2 + side3 * side3); } }
import java.io.BufferedReader; import java.io.InputStreamReader; import java.util.Arrays; import java.util.Collections; import java.util.List; import java.util.ArrayList; public class Main { public static void main(String[] args) throws Exception { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int inputCount = Integer.parseInt(br.readLine()); for( int i = 0; i < inputCount; i++) { String line = br.readLine(); List<Integer> sideLengthList = new ArrayList<>(); for( String s : line.split(" ") ) { sideLengthList.add( Integer.parseInt(s) ); } Collections.sort(sideLengthList, Collections.reverseOrder()); int cSide = sideLengthList.get(0); int aSide = sideLengthList.get(1); int bSide = sideLengthList.get(2); if( cSide * cSide == aSide * aSide + bSide * bSide) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); int n = scanner.nextInt(); for(int i=0; i<n; i++) { int[] a = new int[3]; for(int j=0; j<3; j++) { a[j] = scanner.nextInt(); } for(int j=1; j<3; j++) { if(a[0] < a[j]) { int buf = a[0]; a[0] = a[j]; a[j] = buf; } } System.out.println( (a[0]*a[0]==a[1]*a[1]+a[2]*a[2]) ? "YES" : "NO"); } } }
import java.util.Scanner; import java.util.Arrays; public class Main { public static void main(String[] args) { Scanner cin = new Scanner(System.in); int N = cin.nextInt(); for(int i=1; i<=N; i++){ int[] len = new int[3]; for(int j=0; j<3; j++){ len[j] = cin.nextInt();} Arrays.sort(len); if(len[0]*len[0] + len[1]*len[1] == len[2]*len[2]){System.out.println("YES");} else{System.out.println("NO");} } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.io.PrintWriter; public class Main { public static void main(String[] args) throws IOException { InputStreamReader isr = new InputStreamReader(System.in); BufferedReader br = new BufferedReader(isr); PrintWriter out = new PrintWriter(System.out); String line; String[] numList = new String[2]; int n = Integer.parseInt(br.readLine()); for(int i=0; i<n; i++) { line = br.readLine(); numList = line.split(" "); double num0 = Math.pow(Double.parseDouble(numList[0]), 2); double num1 = Math.pow(Double.parseDouble(numList[1]), 2); double num2 = Math.pow(Double.parseDouble(numList[2]), 2); if ((num2 == num0 + num1) || (num0 == num1 + num2) || (num1 == num0 + num2)) { System.out.println("YES"); }else { System.out.println("NO"); } } } }
import java.util.Scanner; class Main{ public static void main(String args[]){ Scanner sc = new Scanner(System.in); int length = sc.nextInt(); while(sc.hasNext()){ int a = sc.nextInt(); int b = sc.nextInt(); int c = sc.nextInt(); int a2 = a * a; int b2 = b * b; int c2 = c * c; if(a2 + b2 == c2) { System.out.println("YES"); } else if(b2 + c2 == a2){ System.out.println("YES"); } else if(a2 + c2 == b2) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.StringTokenizer; import java.util.Arrays; class Main { public static void main(String[] args) throws IOException { BufferedReader br=new BufferedReader(new InputStreamReader(System.in)); int n=Integer.parseInt(br.readLine()); for(int i=0;i<n;i++){ StringTokenizer st=new StringTokenizer(br.readLine()," "); int array[] =new int[3]; for(int j=0;j<array.length;j++) array[j]=Integer.parseInt(st.nextToken()); Arrays.sort(array); if(Math.pow(array[0],2)+Math.pow(array[1],2)==Math.pow(array[2], 2)) System.out.println("YES"); else System.out.println("NO"); } } }
import java.util.ArrayList; import java.util.Collections; import java.util.List; import java.util.Scanner; class Main { public static void main(String[] args) { List<List<Integer>> userInputs = getUserInputs(); for (List<Integer> triangleSides : userInputs) { boolean isRightAngleTrangle = isRightAngleTraingle(triangleSides); if (isRightAngleTrangle) { System.out.println("YES"); } else { System.out.println("NO"); } } } private static boolean isRightAngleTraingle(List<Integer> intList) { if(intList == null || intList.isEmpty() || intList.size() != 3){ return false; } Collections.sort(intList); int aSide = intList.get(0); int bSide = intList.get(1); int cSide = intList.get(2); if ((cSide * cSide) == ((aSide * aSide) + (bSide * bSide))) { return true; } return false; } private static List<List<Integer>> getUserInputs() { int repetation = 0; List<List<Integer>> returnList = new ArrayList<>(); List<String> userList = new ArrayList<String>(); { Scanner in = new Scanner(System.in); String sNum = in.nextLine(); repetation = Integer.parseInt(sNum); for (int i = 0; i < repetation; i++) { userList.add(in.nextLine()); } } { for (String input : userList) { input = input.trim(); if(input.length() == 0){ continue; } String array[] = input.split("\\s+"); ArrayList<Integer> intList = new ArrayList<Integer>(); for (int i = 0; i < array.length; i++) { String num = array[i]; intList.add(Integer.parseInt(num.trim())); } returnList.add(intList); } } return returnList; } }
import java.util.*; public class Main { static Scanner sc = new Scanner(System.in); static int n, a, b, c; static int A,B,C; public static void main(String[] args) { while(read()){ } } static boolean read(){ if(!sc.hasNext())return false; n = sc.nextInt(); for(int i = 0; i < n; i++){ a = sc.nextInt(); b = sc.nextInt(); c = sc.nextInt(); solve(); } return true; } static void solve(){ if(a != 0 && b != 0 && c!= 0){ A = a * a; B = b * b; C = c * c; if(A == B + C){ System.out.println("YES"); }else if(B == A + C){ System.out.println("YES"); }else if(C == A + B){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.io.BufferedReader; import java.io.InputStreamReader; import java.util.Scanner; import java.util.Arrays; public class Main { public static void main(String[] args) throws java.io.IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); String line = br.readLine(); int N = Integer.parseInt(line); for (int i=0; i<N; i++){ String l = br.readLine(); Scanner sc = new Scanner(l); int a[]; a = new int[3]; for (int j=0; j<3; j++){ a[j] = sc.nextInt(); } Arrays.sort(a); if ((a[0]*a[0] + a[1]*a[1]) == a[2]*a[2]){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.StringTokenizer; public class Main { public static void main(String[] a) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in), 1); String str = ""; StringTokenizer st; int num[] = new int[3]; int index[] = new int[2]; int max = 0, i, j, k; str = br.readLine(); int datasets = Integer.parseInt(str); for (i = 0; i < datasets; i++) { str = br.readLine(); st = new StringTokenizer(str, " "); num[0] = Integer.parseInt(st.nextToken()); num[1] = Integer.parseInt(st.nextToken()); num[2] = Integer.parseInt(st.nextToken()); for (j =0; j < 3; j++) if(num[max] < num[j]) max = j; k = 0; for (j = 0; j < 3; j++) if(num[j] != num[max]) index[k++] = j; if ((num[max] * num[max]) == (num[index[0]] * num[index[0]] + num[index[1]] * num[index[1]])) System.out.println("YES"); else System.out.println("NO"); } } }
import java.util.Scanner; public class Main { private static Scanner scan; public static void main(String[] args) { scan = new Scanner(System.in); int n = Integer.parseInt(scan.next()); for(int i = 0;i < n;i++){ int a[] = {0,0,0}; for (int j = 0;j <3;j++){ a[j] = (int) Math.pow(Integer.parseInt(scan.next()),2); } java.util.Arrays.sort(a); if(a[0]+a[1]==a[2]){ System.out.println("YES"); }else{ System.out.println("NO"); } } System.exit(0); } }
import java.util.*; public class Main{ public static void main(String[] args) { Scanner sc = new Scanner(System.in); int roop = Integer.parseInt(sc.nextLine()); for(int i=0; i<roop; i++) { Triangle tri = new Triangle(sc.nextLine().split(" ")); tri.execute(); } } } class Triangle { private int a; private int b; private int c; public Triangle(String[] nums) { a = Integer.parseInt(nums[0]); a *= a; b = Integer.parseInt(nums[1]); b *= b; c = Integer.parseInt(nums[2]); c *= c; } public void execute() { int biggest = biggest(); String result = ""; if(biggest == 0) { result = sumNum(this.b, this.c, this.a); } else if(biggest == 1) { result = sumNum(this.a, this.c, this.b); } else if(biggest == 2) { result = sumNum(this.a, this.b, this.c); } System.out.println(result); } private int biggest() { int result = Math.max(c, Math.max(a, b)); if(result == a) { return 0; } else if(result == b) { return 1; } else if(result == c) { return 2; } else { return 3; } } private String sumNum(int a, int b, int c) { String result = ""; if(c == a + b) { result = "YES"; } else { result = "NO"; } return result; } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; public class Main { public static void main(String[] arg) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); String str = br.readLine(); int count = Integer.parseInt(str); for (int i = 0; i < count; i++) { str = br.readLine(); String[] datasetstr = str.split(" ", 3); int[] datasetint = new int[3]; for (int j = 0; j <= 2; j++) { datasetint[j] = Integer.parseInt(datasetstr[j]); } for (int k = 0; k <= 1; k++) { for (int l = k + 1; l <= 2; l++) { if (datasetint[k] < datasetint[l]) { int temporary = datasetint[k]; datasetint[k] = datasetint[l]; datasetint[l] = temporary; } } } int cc = datasetint[0] * datasetint[0]; int aa = datasetint[1] * datasetint[1]; int bb = datasetint[2] * datasetint[2]; Boolean isRight = cc == (aa + bb); if (isRight) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.util.Arrays; import java.util.Scanner; public class Main{ static final Scanner s=new Scanner(System.in); public static void main(String args[]){ for(int i=s.nextInt(); i>0; i--){ int[] in={s.nextInt(),s.nextInt(),s.nextInt()}; Arrays.sort(in); System.out.println( in[2]*in[2]==(in[1]*in[1]+in[0]*in[0]) ?"YES":"NO"); } } }
import java.util.*; public class Main { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int dataSize = Integer.parseInt(sc.nextLine()); int[][] data = new int[dataSize][3]; for(int i = 0; i < dataSize; ++i) { String[] splitted = sc.nextLine().split("\\s+"); data[i][0] = Integer.parseInt(splitted[0]); data[i][1] = Integer.parseInt(splitted[1]); data[i][2] = Integer.parseInt(splitted[2]); } for(int i = 0; i < dataSize; ++i) { if(IsRight(data[i][0],data[i][1],data[i][2])) System.out.println("YES"); else System.out.println("NO"); } } public static boolean IsRight(int a, int b, int c) { if((a*a == b*b + c*c) || (b*b == a*a + c*c ) || (c*c == a*a + b*b)) return true; else return false; } }
import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int N = Integer.parseInt(sc.next()); for (int i = 0; i < N; i++) { int a = Integer.parseInt(sc.next()); int b = Integer.parseInt(sc.next()); int c = Integer.parseInt(sc.next()); if (a < b) { a ^= b; b ^= a; a ^= b; } if (a < c) { a ^= c; c ^= a; a ^= c; } if (Math.pow(a, 2) == (Math.pow(b, 2) + Math.pow(c, 2))) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.util.*; public class Main { public static void main(String... args) { final Scanner scanner = new Scanner(System.in); final int set = scanner.nextInt(); for (int i = 0; i < set; i++) { final List<Integer> integers = Arrays.asList(scanner.nextInt(), scanner.nextInt(), scanner.nextInt()); Collections.sort(integers); final double a = Math.pow(integers.get(0), 2); final double b = Math.pow(integers.get(1), 2); final double c = Math.pow(integers.get(2), 2); System.out.println(c == a + b ? "YES" : "NO"); } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; class Main{ public static void main(String[] a) throws IOException{ try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) { String line1 = br.readLine(); int N = Integer.parseInt(line1); for (int i=0; i<N; i++) { String line = br.readLine(); String[] tmp = line.split(" "); int[] tri = {Integer.parseInt(tmp[0]), Integer.parseInt(tmp[1]),Integer.parseInt(tmp[2])}; if (pitagoras(tri[0], tri[1], tri[2]) || pitagoras(tri[1], tri[2], tri[0]) || pitagoras(tri[2], tri[0], tri[1]) ) { System.out.println("YES"); } else { System.out.println("NO"); } } } } private static boolean pitagoras(int a, int b, int c) { return Math.pow(a, 2) + Math.pow(b, 2) == Math.pow(c, 2) ? true : false; } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; public class Main { public static void main(String[] args) { print(); } private static void print() { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); try { String str = br.readLine(); int numberOfReceivedDataset = Integer.parseInt(str); for (int i = 1; i <= numberOfReceivedDataset; i++) { str = br.readLine(); String[] nums = str.split(" ", 0); int x = Integer.parseInt(nums[0]); int y = Integer.parseInt(nums[1]); int z = Integer.parseInt(nums[2]); int xToSecondPower = x * x; int yToSecondPower = y * y; int zToSecondPower = z * z; if (xToSecondPower + yToSecondPower == zToSecondPower) { System.out.println("YES"); } else if (zToSecondPower + yToSecondPower == xToSecondPower) { System.out.println("YES"); } else if (zToSecondPower + xToSecondPower == yToSecondPower) { System.out.println("YES"); } else { System.out.println("NO"); } } } catch (IOException e) { e.printStackTrace(); } } }
import java.util.Scanner; class Main{ public static void main(String[] args){ int n, temp; Scanner stdIn = new Scanner(System.in); n = stdIn.nextInt(); int[][] side = new int[n][3]; for( int i = 0; i < n; i++) { for( int j = 0; j < 3; j++) { side[i][j] = stdIn.nextInt(); } if ( side[i][0] < side[i][1] ){ temp = side[i][0] ; side[i][0] = side[i][1]; side[i][1] = temp; } if ( side[i][0] < side[i][2] ){ temp = side[i][0] ; side[i][0] = side[i][2]; side[i][2] = temp; } } for( int i = 0; i < n; i++) { if ( side[i][0]*side[i][0] == side[i][1]*side[i][1] + side[i][2]*side[i][2] ){ System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Arrays; public class Main { public static void main(String[] args) throws NumberFormatException, IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int n = Integer.parseInt(br.readLine()); for(int i = 0; i < n; i++){ String[] tmpStr = br.readLine().split(" "); int[] linesq = new int[3]; for(int j = 0; j < 3; j++){ linesq[j] = Integer.parseInt(tmpStr[j]); linesq[j] *= linesq[j]; } Arrays.sort(linesq); if(linesq[2] == linesq[1] + linesq[0] ){ System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.util.Arrays; import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner s = new Scanner(System.in); int n = s.nextInt(); int[] l = new int[3]; while (n-->0) { l[0] = s.nextInt(); l[1] = s.nextInt(); l[2] = s.nextInt(); Arrays.sort(l); System.out.println((l[0]*l[0]+l[1]*l[1]-l[2]*l[2] == 0)?"YES":"NO"); } } }
import java.util.Scanner; public class Main { void run() { Scanner sc = new Scanner(System.in); int N = sc.nextInt(); int a, b, c; for (int i = 0; i < N; i++) { a = sc.nextInt(); b = sc.nextInt(); c = sc.nextInt(); a = a * a; b = b * b; c = c * c; if (a + b == c) { System.out.println("YES"); } else if (b + c == a) { System.out.println("YES"); } else if (a + c == b) { System.out.println("YES"); } else { System.out.println("NO"); } } } public static void main(String[] args) { new Main().run(); } }
import java.io.*; import java.util.Arrays; public class Main { public static void main (String[] args) throws IOException{ BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); String line; int set = Integer.parseInt(br.readLine()); for(int i = 0; i < set; i++) { line = br.readLine(); String[] numbers = line.split(" "); int[] numSet = new int[3]; for (int j = 0; j < 3; j++){ numSet[j] = Integer.parseInt(numbers[j]); } Arrays.sort(numSet); if(numSet[2]*numSet[2] == numSet[1]*numSet[1] + numSet[0]*numSet[0]){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.ArrayList; class Main { public static void main(String[] args) throws NumberFormatException, IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); ArrayList<String> strLst = new ArrayList<String>(); int cnt = 0; int max; int other; String inputLine = ""; String[] lines; br.readLine(); while (cnt <= 1000 && (inputLine = br.readLine()) != null) { max = 0; other = 0; lines = inputLine.split(" "); for (int i = 0; i < 3; ++i) { other += (int) Math.pow(Integer.parseInt(lines[i]), 2); if (max < Integer.parseInt(lines[i])) { max = Integer.parseInt(lines[i]); } } other -=(int) Math.pow(max, 2); if (other == (int) Math.pow(max, 2)) strLst.add("YES"); else strLst.add("NO"); ++cnt; } for(String result : strLst) { System.out.println(result); } } }
import java.util.*; public class Main{ Main(){ Scanner sc = new Scanner(System.in); int[] a = new int[3]; while(sc.hasNext()){ int n = sc.nextInt(); for(int cs = 0; cs < n; cs++){ for(int i = 0; i < 3; i++){ a[i] = sc.nextInt(); a[i] *= a[i]; } Arrays.sort(a); String s = "NO"; if(a[0]+a[1] == a[2]) s = "YES"; System.out.println(s); } } } public static void main(String[] args){ new Main(); } }
import java.io.BufferedReader; import java.io.InputStreamReader; class Main{ public static void main(String args[]){ String str; try{ InputStreamReader is = new InputStreamReader(System.in); BufferedReader br = new BufferedReader(is); String[] strary = new String[3]; int[] len = new int[3]; int temp; str = br.readLine(); int count = Integer.parseInt(str); while((count--) != 0){ str = br.readLine(); strary = str.split(" "); for(int i=0;i<3;i++){ len[i] = Integer.parseInt(strary[i]); } if(len[0] > len[1]){ temp = len[0]; len[0] = len[1]; len[1] = temp; } if(len[1] > len[2]){ temp = len[1]; len[1] = len[2]; len[2] = temp; } if((len[0]*len[0] + len[1]*len[1]) == (len[2]*len[2])) System.out.println("YES"); else System.out.println("NO"); } } catch(Exception e){ System.exit(0); } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.ArrayList; import java.util.List; import java.util.StringTokenizer; class Main { public static void main(String[] args) throws NumberFormatException, IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int ndata = Integer.parseInt(br.readLine()); List<String> results = new ArrayList<String>(); while (ndata > 0) { String line = br.readLine(); StringTokenizer st = new StringTokenizer(line); int a = Integer.parseInt(st.nextToken()); int b = Integer.parseInt(st.nextToken()); int c = Integer.parseInt(st.nextToken()); if (a*a + b*b == c*c || b*b + c*c == a*a || a*a + c*c == b*b) { results.add("YES"); } else { results.add("NO"); } ndata--; } for (String r : results) { System.out.println(r); } } }
import java.io.*; public class Main { private static final int subNum = 3; private static final int adge1 = 0; private static final int adge2 = 1; private static final int adge3 = 2; public static void main(String[] a) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int num = Integer.parseInt(br.readLine()); int[][] tryangle = new int[num][subNum]; for (int i = 0; i < num; i++) { String str = br.readLine(); String[] strBuf = str.split(" "); for (int j = 0; j < subNum; j++) { tryangle[i][j] = Integer.parseInt(strBuf[j]); } } int x, y, z; for (int i = 0; i < num; i++) { x = tryangle[i][adge1] * tryangle[i][adge1]; y = tryangle[i][adge2] * tryangle[i][adge2]; z = tryangle[i][adge3] * tryangle[i][adge3]; if (((x + y) == z) || ((y + z) == x) || ((x + z) == y)) System.out.println("YES"); else System.out.println("NO"); } } }
import java.util.*; public class Main { public static void main(String[] args){ Scanner sc= new Scanner (System.in); int n = sc.nextInt(); int i[]; i = new int[3]; for(int count=0;count<n;count++){ for(int d=0;d<3;d++ ){ i[d]=sc.nextInt(); } Arrays.sort(i); if((i[2]*i[2])==(i[0]*i[0])+(i[1]*i[1])){ System.out.println("YES"); } else System.out.println("NO"); } } }
import java.io.BufferedReader; import java.io.InputStreamReader; class Main { public static void main(String[] args) { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); String line; try { br.readLine(); while ((line = br.readLine()) != null) { String[] v = line.split(" "); int a = Integer.parseInt(v[0]); int b = Integer.parseInt(v[1]); int c = Integer.parseInt(v[2]); int max = Math.max(Math.max(a, b), c); if (max == a) { if (a * a == b * b + c * c) { System.out.println("YES"); } else { System.out.println("NO"); } } else if (max == b) { if (b * b == a * a + c * c) { System.out.println("YES"); } else { System.out.println("NO"); } } else { if (c * c == a * a + b * b) { System.out.println("YES"); } else { System.out.println("NO"); } } } } catch (Exception e) { } } }
import java.util.*; public class Main { public static void main(String[] args){ Scanner input=new Scanner(System.in); int circle=input.nextInt(); for(int i=0;i<circle;i++){ int a=input.nextInt(); int b=input.nextInt(); int c=input.nextInt(); if(a*a+b*b==c*c || a*a+c*c==b*b || b*b+c*c==a*a) System.out.println("YES"); else System.out.println("NO"); } } }
import java.util.*; class Main { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); int n = scanner.nextInt(); int[] sides = new int[3]; for (int i = 0; i < n; i++) { sides[0] = scanner.nextInt(); sides[1] = scanner.nextInt(); sides[2] = scanner.nextInt(); Arrays.sort(sides); System.out.println( sides[0] * sides[0] + sides[1] * sides[1] == sides[2] * sides[2] ? "YES" : "NO" ); } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class Main { public static void main(String[] args) throws IOException { BufferedReader r = new BufferedReader(new InputStreamReader(System.in)); int n = Integer.parseInt(r.readLine()); StringTokenizer st; int side[] = new int[3]; for (int i = 0; i < n; i++) { st = new StringTokenizer(r.readLine()); for(int j = 0;j < 3;j++){ side[j] = Integer.parseInt(st.nextToken()); } Arrays.sort(side); if((side[0]*side[0] + side[1]*side[1]) == side[2]*side[2]) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner s=new Scanner(System.in); int a,b,c,n,i,temp,x,y; n=s.nextInt(); for(i=0;i<n;i++){ a=s.nextInt(); b=s.nextInt(); if(b>a){ temp=a; a=b; b=temp; } c=s.nextInt(); if(c>a){ temp=a; a=c; c=temp; } x=a*a;y=b*b+c*c; if(x!=y) System.out.println("NO"); else System.out.println("YES"); } } }
import java.util.*; public class Main { private static final Scanner scn = new Scanner(System.in); public static void main(String[] args) { for(int i = 0, n = scn.nextInt(); i < n; i++) { int[] ary = {scn.nextInt(), scn.nextInt(), scn.nextInt()}; Arrays.sort(ary); boolean flg = ary[0] * ary[0] + ary[1] * ary[1] == ary[2] * ary[2]; System.out.println(flg ? "YES" : "NO"); } } }
import java.io.*; import java.util.*; public class Main{ public static void main(String[] args)throws IOException{ BufferedReader reader=new BufferedReader(new InputStreamReader(System.in)); String s=reader.readLine(); int n=Integer.parseInt(s); for(int j=0;j<n;j++){ s=reader.readLine(); String t[] =s.split(" "); int[] in=new int[t.length]; for(int i=0;i<t.length;i++) in[i]=Integer.parseInt(t[i]); Arrays.sort(in); String ans; if(in[0]*in[0]+in[1]*in[1]==in[2]*in[2]) ans="YES"; else ans="NO"; System.out.println(ans); } } }
import java.util.*; import java.io.*; public class Main{ public static void main(String[] args) throws NumberFormatException, IOException{ int n; int[] lines=new int[3]; int max_lines_number=0; BufferedReader d=new BufferedReader(new InputStreamReader(System.in)); n=Integer.valueOf(d.readLine()); for(int i=0;i<n;i++){ String array[] =d.readLine().split(" "); for(int j =0;j<3;j++){ lines[j]=Integer.valueOf(array[j]); } for(int j =0;j<3;j++){ if(lines[j]>=lines[max_lines_number])max_lines_number=j; } int max_line=(int) Math.pow(lines[max_lines_number],2); int other_lines=0; for(int j=0;j<3;j++){ if(j!=max_lines_number)other_lines+=Math.pow(lines[j],2); } if(max_line==other_lines){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; class Main{ public static void main(String[] a) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int x; int y; int z; String line = br.readLine(); line = br.readLine(); while (line != null) { String strArray[] = line.split(" "); x = Integer.valueOf(strArray[0]); y = Integer.valueOf(strArray[1]); z = Integer.valueOf(strArray[2]); String Anser = "NO"; if (x * x == (y * y + z * z) || (y * y == (x * x + z * z)) || (z * z == (y * y + x * x))) { Anser = "YES"; } System.out.println(Anser); line = br.readLine(); } } }
import java.util.Scanner; class Main { private void rightTriangle() { Scanner sc = new Scanner(System.in); int n = sc.nextInt(); while (n-- != 0) { int a = sc.nextInt(); int b = sc.nextInt(); int c = sc.nextInt(); if (a * a + b * b == c * c || b * b + c * c == a * a || c * c + a * a == b * b ) System.out.println("YES"); else System.out.println("NO"); } } public static void main(String[] args) { (new Main()).rightTriangle(); } }
import java.io.*; public class Main { public static void main(String args[]) throws IOException{ String str; String[] dataSet; int dataSet_Number; double a,b,c,i; BufferedReader input = new BufferedReader(new InputStreamReader(System.in)); dataSet_Number = Integer.parseInt(input.readLine()); for(i = 0; i < dataSet_Number; i++){ str = input.readLine(); dataSet = str.split(" "); a = Math.pow(Double.parseDouble(dataSet[0]),2); b = Math.pow(Double.parseDouble(dataSet[1]),2); c = Math.pow(Double.parseDouble(dataSet[2]),2); if((a + b) == c || (b + c) == a || (a + c) == b){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.io.BufferedReader; import java.io.InputStreamReader; import java.util.Arrays; import java.util.StringTokenizer; public class Main{ private final static String NEGATIVE = "NO\n"; private final static String AFFIRMATIVE = "YES\n"; public static void main(String[] args) throws Exception { BufferedReader br = new BufferedReader(new InputStreamReader(System.in), 512); int number = Integer.parseInt(br.readLine()); int sides[] = new int[3]; int productAB; StringTokenizer tknz; StringBuilder builder = new StringBuilder(); for (; 0 < number; number--) { tknz = new StringTokenizer(br.readLine()); for (int i = 0; i < 3; i++) { sides[i] = Integer.parseInt(tknz.nextToken()); } Arrays.sort(sides); if (((productAB = sides[0] * sides[1]) % 12) != 0) { builder.append(NEGATIVE); } else if (productAB * sides[2] % 60 != 0) { builder.append(NEGATIVE); } else if (Math.pow(sides[0], 2) + Math.pow(sides[1], 2) != Math.pow(sides[2], 2)) { builder.append(NEGATIVE); } else { builder.append(AFFIRMATIVE); } } System.out.print(builder); } }
import java.util.Scanner; public class Main{ public static void main(String[] args) { Scanner stdIn = new Scanner(System.in); int a; int b; int c; int N = stdIn.nextInt(); int count = 0; int box; while (true) { if(N<=0){ break; } a = stdIn.nextInt(); b = stdIn.nextInt(); c = stdIn.nextInt(); if (a < b) { box = a; a = b; b = box; } if (a < c) { box = a; a = c; c = box; } a = a * a; b = b * b; c = c * c; if (a == b + c) System.out.println("YES"); else System.out.println("NO"); count=count+1; if (count == N){ break; } } } }
import java.util.Scanner; import java.util.Arrays; class Main{ public static void main(String[] a){ Scanner s = new Scanner(System.in); int n = s.nextInt(); int[] inputs = new int[3]; String result; for(int i = 0;i < n;i++) { for (int j = 0; j < 3; j++) { int m = s.nextInt(); inputs[j] = m * m; } Arrays.sort(inputs); result = inputs[0] + inputs[1] == inputs[2] ? "YES" : "NO"; System.out.println(result); } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; public class Main { public static void main(String[] args) throws NumberFormatException, IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int lineCount = Integer.parseInt(br.readLine()); for (int i = 0; i < lineCount; i++) { String[] input = br.readLine().split(" "); int side1 = Integer.parseInt(input[0]); int side2 = Integer.parseInt(input[1]); int side3 = Integer.parseInt(input[2]); if (isRightTriangle(side1, side2, side3)) { System.out.println("YES"); } else { System.out.println("NO"); } } } private static boolean isRightTriangle(int side1, int side2, int side3) { boolean isRightTriangle = false; if (side1 >= side2 && side1 >= side3) { isRightTriangle = (side1 * side1 == side2 * side2 + side3 * side3); } else if (side2 >= side1 && side2 >= side3) { isRightTriangle = (side2 * side2 == side1 * side1 + side3 * side3); } else { isRightTriangle = (side3 * side3 == side1 * side1 + side2 * side2); } return isRightTriangle; } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; public class Main { public static void main(String[] args) throws IOException { int size = readInt(); for (int i = 0; i < size; i++) { boolean yes = false; int[] a = readInts(); for (int j = 0; j < a.length; j++) { a[j] *= a[j]; } for (int j = 0; j < a.length && !yes; j++) { yes = (a[j] == (a[(1 + j) % 3] + a[(2 + j) % 3])); } System.out.println(yes ? "YES" : "NO"); } } static BufferedReader br = new BufferedReader(new InputStreamReader( System.in)); private static int[] readInts() throws IOException { String readLine = br.readLine(); if (readLine == null) { return null; } String[] s = readLine.split(" "); int[] result = new int[s.length]; for (int i = 0; i < result.length; i++) result[i] = Integer.parseInt(s[i], 10); return result; } private static int readInt() throws IOException { return Integer.parseInt(br.readLine(), 10); } }
import java.io.*; import java.util.StringTokenizer; import java.util.Collections; import java.util.ArrayList; class Main { public static void main(String args[]) { InputStreamReader isr = new InputStreamReader(System.in); BufferedReader br = new BufferedReader(isr); try { int n = Integer.parseInt(br.readLine()); for (int i=0;i<n;i++) { String buf = br.readLine(); StringTokenizer st = new StringTokenizer(buf); ArrayList<Integer> a = new ArrayList<Integer>(); a.add(Integer.parseInt(st.nextToken())); a.add(Integer.parseInt(st.nextToken())); a.add(Integer.parseInt(st.nextToken())); Collections.sort(a); if (Math.pow(a.get(0),2)+Math.pow(a.get(1),2)==Math.pow(a.get(2),2)) System.out.println("YES"); else System.out.println("NO"); } } catch (IOException e) { System.out.println("IOException!"); } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.lang.Math; public class Main { public static void main(String[] args) { InputStreamReader is = new InputStreamReader(System.in); BufferedReader br = new BufferedReader(is); String col = "0"; String[] cols = null; int colInt = 0; try { col = br.readLine(); colInt = Integer.parseInt(col); cols = new String[colInt]; for(int i = 0;i < colInt;i++){ cols[i] = br.readLine(); } }catch(IOException e){ } int[][] triangle = new int[colInt][3]; for(int i = 0;i < colInt;i++){ String[] temp = cols[i].split(" "); triangle[i][0] = Integer.parseInt(temp[0]); triangle[i][1] = Integer.parseInt(temp[1]); triangle[i][2] = Integer.parseInt(temp[2]); } for(int i = 0;i < colInt;i++){ int maxIndex = 0; if(triangle[i][maxIndex] < triangle[i][1]){ maxIndex = 1; } if(triangle[i][maxIndex] < triangle[i][2]){ maxIndex = 2; } switch (maxIndex){ case 0: if(Math.pow(triangle[i][0],2) == Math.pow(triangle[i][1],2) + Math.pow(triangle[i][2],2)){ System.out.println("YES"); }else{ System.out.println("NO"); } break; case 1: if(Math.pow(triangle[i][1],2) == Math.pow(triangle[i][0],2) + Math.pow(triangle[i][2],2)){ System.out.println("YES"); }else{ System.out.println("NO"); } break; case 2: if(Math.pow(triangle[i][2],2) == Math.pow(triangle[i][0],2) + Math.pow(triangle[i][1],2)){ System.out.println("YES"); }else{ System.out.println("NO"); } break; } } } }
import java.util.*; class Main{ public static void main(String[] a){ Scanner scanner = new Scanner(System.in); int N = scanner.nextInt(); int[] hen = new int[3]; for(int i = 0 ; i < N ; i ++ ){ for(int x = 0; x < 3 ; x++){ hen[x] = scanner.nextInt(); } Arrays.sort(hen); if( (hen[2]*hen[2]) == (hen[0]*hen[0] + hen[1]*hen[1]) ){ System.out.println("YES"); } else{ System.out.println("NO"); } } } }
import java.util.*; class Main{ public static void main(String[] args){ Scanner sc = new Scanner(System.in); int n = sc.nextInt(); int a, b, c; boolean flg; for(int i = 0; i < n; i++){ a = sc.nextInt(); b = sc.nextInt(); c = sc.nextInt(); if(a >= b && a >= c){ flg = pita(a, b, c); }else if(b >= a && b >= c){ flg = pita( b, a, c); }else{ flg = pita( c, a, b); } if(flg){ System.out.println("YES"); }else{ System.out.println("NO"); } } } public static boolean pita(int a, int b, int c){ if( a * a == b * b + c * c){ return true; } return false; } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Arrays; import java.util.StringTokenizer; public class Main { private final static String NEGATIVE = "NO\n"; private final static String AFFIRMATIVE = "YES\n"; public static void main(String[] args) throws NumberFormatException, IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in), 512); int number = Integer.parseInt(br.readLine()); int sides[] = new int[3]; StringTokenizer tknz; StringBuilder builder = new StringBuilder(); for (; 0 < number; number--) { tknz = new StringTokenizer(br.readLine()); for (int i = 0; i < 3; i++) { sides[i] = Integer.parseInt(tknz.nextToken()); } Arrays.sort(sides); if (sides[0] * sides[1] * sides[2] % 60 != 0) { builder.append(NEGATIVE); } else if (Math.pow(sides[0], 2) + Math.pow(sides[1], 2) != Math.pow(sides[2], 2)) { builder.append(NEGATIVE); } else { builder.append(AFFIRMATIVE); } } System.out.print(builder); } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.ArrayList; import java.util.Arrays; import java.util.List; class Main { public static void main(String[] args) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); try { String s; int input = Integer.parseInt(br.readLine()); List<String> rightAngleList = new ArrayList<String>(); for (int i = 1; i <= input; i++) { s = br.readLine(); String[] num = s.split(" "); Integer[] side = convertArray(num); if (1 <= side[0] && side[0] <= 1000 && 1 <= side[1] && side[1] <= 1000 && 1 <= side[2] && side[2] <= 1000) { Arrays.sort(side); if (side[2] * side[2] == side[1] * side[1] + side[0] * side[0]) { rightAngleList.add("YES"); } else { rightAngleList.add("NO"); } } else { break; } } String[] rightAngles = rightAngleList.toArray(new String[0]); for(String rightAngle : rightAngles){ System.out.println(rightAngle); } } finally { br.close(); } } public static Integer[] convertArray(String[] str) { List<Integer> list = new ArrayList<Integer>(); for (String num : str) { list.add(Integer.parseInt(num)); } return list.toArray(new Integer[0]); } }
import java.util.Scanner; public class Main{ public static void main(String[] args){ Scanner sc = new Scanner(System.in); for(int i = sc.nextInt(); i>0; i--){ int a = sc.nextInt(); int b = sc.nextInt(); int c = sc.nextInt(); if(a*a == (b*b + c*c) || b*b == (a*a + c*c) || c*c == (a*a + b*b)) System.out.println("YES"); else System.out.println("NO"); } } }
import java.util.*; public class Main { public static void main(String[] args) { Scanner s = new Scanner(System.in); int x = s.nextInt(); byte[] a = new byte[3]; while(s.hasNext()){ for(int i=0;i<3;i++) a[i] = s.nextByte(); Arrays.sort(a); if(a[2]*a[2] == a[0]*a[0] + a[1]*a[1]) System.out.println("YES"); else System.out.println("NO"); } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.ArrayList; public class Main { public static void main(String[] a){ BufferedReader stdin = new BufferedReader(new InputStreamReader(System.in)); String line; int numDS = -1; int aSide = -1; int bSide = -1; int cSide = -1; ArrayList <String> results = new ArrayList<String>(); try { while ((line = stdin.readLine()) != null && line.length()!= 0) { String[] checker = line.split(" "); if (checker.length == 1){ numDS = Integer.parseInt(checker[0]); } else if (checker.length == 3){ int temp1 = Integer.parseInt(checker[0]); int temp2 = Integer.parseInt(checker[1]); int temp3 = Integer.parseInt(checker[2]); if (temp1 < 1 || temp1 >1000 || temp2 < 1 || temp2 >1000 || temp3 < 1 || temp3 >1000){ results.add("NO"); } else { if (temp1 > temp2 && temp1> temp3){ cSide = temp1; aSide = temp2; bSide = temp3; } else if (temp2 > temp1 && temp2 > temp3){ cSide = temp2; aSide = temp1; bSide = temp3; } else { cSide = temp3; aSide = temp2; bSide = temp1; } if ((cSide*cSide) == ((aSide*aSide)+(bSide*bSide))){ results.add("YES"); } else { results.add("NO"); } if (results.size() == numDS){ break; } } } } for (String s: results){ System.out.println(s); } } catch (NumberFormatException e) { } catch (IOException e) { } } }
import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int N = sc.nextInt(); for(int i=1; i<=N; i++) { int a = sc.nextInt(); int b = sc.nextInt(); int c = sc.nextInt(); if(a < c && b < c) { if(c * c == a * a + b * b) { System.out.println("YES"); } else { System.out.println("NO"); } } else if(a < b && c < b) { if(b * b == a * a + c * c) { System.out.println("YES"); } else { System.out.println("NO"); } } else { if(a * a == b * b + c * c) { System.out.println("YES"); } else { System.out.println("NO"); } } } sc.close(); } }
import java.util.Scanner; import java.util.Arrays; public class Main { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); int num = scanner.nextInt(); for (int i = 0; i < num; i++) { int a = scanner.nextInt(); int b = scanner.nextInt(); int c = scanner.nextInt(); if (isRightTriAngle(a, b, c)) { System.out.println("YES"); } else { System.out.println("NO"); } } } static boolean isRightTriAngle(int side_a, int side_b, int side_c) { int[] sides = { side_a, side_b, side_c }; Arrays.sort(sides); int a_2 = (int)Math.pow(sides[0], 2); int b_2 = (int)Math.pow(sides[1], 2); int c_2 = (int)Math.pow(sides[2], 2); return a_2 + b_2 == c_2; } }
import java.util.Arrays; import java.util.Scanner; public class Main { public static void main(String[] arg) { int[] a=new int[3]; int n=0; Scanner scan = new Scanner(System.in); n=scan.nextInt(); for (int j=0;j<n;j++) { a[0] = scan.nextInt(); a[1] = scan.nextInt(); a[2] = scan.nextInt(); Arrays.sort(a); if(a[0]*a[0]+a[1]*a[1]==a[2]*a[2]){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.util.Arrays; import java.util.Scanner; public class Main { public static void main(String[] args) { int dataset; int[] data = new int[3]; Scanner scanner = new Scanner(System.in); dataset = scanner.nextInt(); for(int i=0; i<dataset; i++){ for(int j=0; j<3; j++){ data[j] = scanner.nextInt(); } Arrays.sort(data); if(data[2]*data[2] == (data[0]*data[0] + data[1]*data[1])){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.io.*; import java.util.*; public class Main { public static void main(String[] args) { try { BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); int T = Integer.parseInt(in.readLine()); for (int i = 0; i < T; i++) { String[] sar = in.readLine().split(" "); int[] side = new int[3]; for (int j = 0; j < 3; j++) { side[j] = Integer.parseInt(sar[j]); } Arrays.sort(side); if (side[0] * side[0] + side[1] * side[1] == side[2] * side[2]) { System.out.println("YES"); } else { System.out.println("NO"); } } } catch (Exception e) { e.printStackTrace(); } } }
import java.util.Scanner; class Main{ public static void main(String[] args){ Scanner scan = new Scanner(System.in); int[] data = new int[3]; while (scan.hasNext()) { int n=scan.nextInt(); for (int i = 0; i < n; i++) { for (int j = 0; j < 3; j++) { data[j] = scan.nextInt(); } for (int j = 0; j < 2; j++) { for (int k = j + 1; k < 3; k++) { if (data[j] < data[k]) { int tmp; tmp = data[j]; data[j] = data[k]; data[k] = tmp; } } } if (data[0] * data[0] == data[1] * data[1] + data[2] * data[2]) System.out.println("YES"); else System.out.println("NO"); } } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Arrays; public class Main { public static void main(String[] args) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int N = Integer.parseInt(br.readLine()); for (int i = 0; i < N; i++) { String[] str = br.readLine().split(" "); int[] sides = new int[str.length]; for (int j = 0; j < str.length; j++) { sides[j] = Integer.parseInt(str[j]); } Arrays.sort(sides); if (Math.pow(sides[0], 2) + Math.pow(sides[1], 2) == Math.pow(sides[2], 2)) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.util.Arrays; import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner scan = new Scanner(System.in); int dataSetOfNum = scan.nextInt(); int[] dataSet = new int[3]; int side1, side2, side3; for(int i = 0; i < dataSetOfNum; i++) { dataSet[0] = scan.nextInt(); dataSet[1] = scan.nextInt(); dataSet[2] = scan.nextInt(); Arrays.sort(dataSet); if((Math.pow(dataSet[0], 2) + Math.pow(dataSet[1], 2)) == Math.pow(dataSet[2], 2)) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.io.BufferedReader; import java.io.InputStreamReader; import java.util.ArrayList; import java.util.Collections; import java.util.regex.Matcher; import java.util.regex.Pattern; public class Main { public static void main(String[] args) { try { Pattern pattern = Pattern.compile("([0-9]+) *([0-9]+) *([0-9]+)"); BufferedReader bf = new BufferedReader(new InputStreamReader(System.in)); Matcher matcher; ArrayList<Integer> l = new ArrayList<Integer>(); int n=Integer.parseInt(bf.readLine()); for(int i=0;i<n;i++){ matcher = pattern.matcher(bf.readLine()); if(matcher.matches()){ for(int j=1;j<=3;j++){ l.add(Integer.parseInt(matcher.group(j))*Integer.parseInt(matcher.group(j))); } Collections.sort(l); if(l.get(0).intValue()+l.get(1).intValue() == l.get(2).intValue()){ System.out.println("YES"); }else{ System.out.println("NO"); } l.clear(); } } }catch(Exception e){ System.out.println(e); } } }
import java.util.Arrays; import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner s = new Scanner(System.in); int N = s.nextInt(); s.nextLine(); int[][] a = new int[N][3]; String str ; String[] result; for(int i = 0;i <N;i++) { result = s.nextLine().split(" "); for(int j = 0; j < a[i].length;j++) { a[i][j] = Integer.parseInt(result[j]); } Arrays.sort(a[i]); } for(int i = 0;i<N;i++) { if(a[i][1]*a[i][1]+a[i][0]*a[i][0]-a[i][2]*a[i][2]==0) { str = "YES"; }else{ str = "NO"; } System.out.println(str); } } }
import java.util.*; public class Main { public static void main(String[] args){ Scanner sc=new Scanner(System.in); int N=sc.nextInt(); for(int i=0;i<N;i++){ int a=0,b=0,c=0; int x=sc.nextInt(); int y=sc.nextInt(); if(x>y){ int t=x; x=y; y=t; } int z=sc.nextInt(); if(z<x){ a=z; b=x; c=y; }else if(z<y){ a=x; b=z; c=y; }else{ a=x; b=y; c=z; } if(a*a+b*b==c*c){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.io.BufferedReader; import java.io.InputStreamReader; import java.util.Arrays; public class Main { public static void main(String[] args) throws Exception { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int n = Integer.parseInt(br.readLine()); for(int i = 0;i < n;i++){ String[] vals = br.readLine().split(" ",0); int[] int_vals = new int[vals.length]; for(int j = 0;j < int_vals.length;j++){ int_vals[j] = Integer.parseInt(vals[j]); } Arrays.sort(int_vals); int a2 = int_vals[2] * int_vals[2]; int b2 = int_vals[1] * int_vals[1]; int c2 = int_vals[0] * int_vals[0]; if(a2 == b2 + c2){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.util.Scanner; public class Main { public static void main(String[] args) throws java.io.IOException { Scanner scan = new Scanner(System.in); int n = scan.nextInt(); int[] a = new int [n]; int[] b = new int [n]; int[] c = new int [n]; for(int d = 0; d < n ; d++){ a[d] = scan.nextInt(); b[d] = scan.nextInt(); c[d] = scan.nextInt(); } for(int e = 0;e < n ; e++){ if((a[e]*a[e]+b[e]*b[e]==c[e]*c[e]) || (b[e]*b[e]+c[e]*c[e]==a[e]*a[e]) || (c[e]*c[e]+a[e]*a[e]==b[e]*b[e])){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.util.ArrayList; import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner sc = new Scanner(System.in); ArrayList<String> result = new ArrayList<String>(); int num = sc.nextInt(); for(int i = 0; i < num; i++){ result.add(isTriangle(sc.nextInt(), sc.nextInt(), sc.nextInt())); } for(int i = 0; i < result.size(); i++){ System.out.println(result.get(i)); } } private static String isTriangle(int x, int y, int z){ int x2 = x * x; int y2 = y * y; int z2 = z * z; if(x2 + y2 == z2){ return "YES"; } else if(y2 + z2 == x2){ return "YES"; } else if(z2 + x2 == y2){ return "YES"; } else{ return "NO"; } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Arrays; public class Main{ public static void main(String[] args) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int N = Integer.parseInt(br.readLine()); for (int j = 0; j < N; j++) { String[] arr = br.readLine().split(" "); int[] lens = new int[3]; for (int i = 0; i < 3; i++) { lens[i] = Integer.parseInt(arr[i]); } Arrays.sort(lens); if (lens[2] * lens[2] == lens[0] * lens[0] + lens[1] * lens[1]) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.util.*;class Main{public static void main(String[]g){Scanner S=new Scanner(System.in);for(int i=S.nextInt(),j,x,y,z,a[]=new int[3];i-->0;System.out.println(a[2]*a[2]==a[1]*a[1]+a[0]*a[0]?"YES":"NO")){for(j=0;j<3;)a[j++]=S.nextInt();Arrays.sort(a);}}}
import java.util.*; public class Main{ public static void main(String[] args){ Scanner sc = new Scanner(System.in); int N = sc.nextInt(); int sides[] = new int[3]; int rank[] = new int[3]; for(int i=0;i<N;i++){ sides[0]=sc.nextInt(); sides[1]=sc.nextInt(); sides[2]=sc.nextInt(); rank[0]=sides[0]; rank[1]=sides[1]; rank[2]=sides[2]; for(int j=0;j<2;j++){ if(sides[j]<sides[j+1]){ rank[j]=sides[j+1]; rank[j+1]=sides[j]; } } if(rank[0]<rank[1]){ rank[0]=rank[1]; rank[1]=sides[0]; } if(rank[0]*rank[0]==rank[1]*rank[1]+rank[2]*rank[2]){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.util.Scanner; public class Main{ public static void main(String[] args){ Scanner s = new Scanner(System.in); int b,x,max,SH; SH = 0; while(s.hasNextInt()){ x = s.nextInt(); int[][] a = new int[x][3]; for(b = 0; b < x; b++){ a[b][0] = s.nextInt(); a[b][1] = s.nextInt(); a[b][2] = s.nextInt(); } for(b = 0; b < x; b++){ max = a[b][0]; if(a[b][1] > max)max = a[b][1]; if(a[b][2] > max)max = a[b][2]; if(max == a[b][0]){ SH = a[b][1]*a[b][1]+a[b][2]*a[b][2]; }else if(max == a[b][1]){ SH = a[b][0]*a[b][0]+a[b][2]*a[b][2]; }else if(max == a[b][2]){ SH = a[b][0]*a[b][0]+a[b][1]*a[b][1]; } max = max*max; if(SH == max){ System.out.println("YES"); }else{ System.out.println("NO"); } } } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.ArrayList; import java.util.Arrays; import java.util.Collections; import java.util.StringTokenizer; class Main { public static void main(String[] args) throws IOException { BufferedReader br = new BufferedReader( new InputStreamReader(System.in)); String number = br.readLine(); String s = br.readLine(); StringTokenizer st; int count = 0; ArrayList<String> list = new ArrayList<>(); while (!(s == null || "".equals(s))) { st = new StringTokenizer(s); Integer[] tri = new Integer[3]; tri[0] = Integer.parseInt(st .nextToken()); tri[1] = Integer.parseInt(st .nextToken()); tri[2] = Integer.parseInt(st .nextToken()); Arrays.sort(tri, Collections .reverseOrder()); String yesno = new String(); yesno = "NO"; double compare = Math.pow(tri[0], 2) - Math.pow(tri[1], 2) - Math .pow(tri[2], 2); if (compare == 0) { yesno = "YES"; } list.add(count++, yesno); s = br.readLine(); } for (String string : list) { System.out.println(string); } } }
import java.util.List; import java.util.ArrayList; import java.util.Arrays; import java.util.Collections; import java.util.Scanner; public class Main { public static void main(String[]args){ IsitATriangle(); } public static void IsitATriangle(){ Scanner scan = new Scanner(System.in); int n = scan.nextInt(); int[]triangle = new int[3]; for(int i=0;i<n;i++){ for(int j=0;j<3;j++)triangle[j]=scan.nextInt(); Arrays.sort(triangle); if(triangle[0]*triangle[0]+triangle[1]*triangle[1]==triangle[2]*triangle[2]) System.out.println("YES"); else System.out.println("NO"); } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Arrays; class Main { public static void main(String[] args) throws NumberFormatException, IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int dataset = Integer.parseInt(br.readLine()); String str; for(int i = 0; i < dataset; i++) { str = br.readLine(); String strline[] = str.split(" ", 0); int line[] = new int[strline.length]; for(int j = 0; j < 3; j++) { line[j] = Integer.parseInt(strline[j]); } Arrays.sort(line); if(Math.pow((double)line[2], 2) == Math.pow((double)line[0], 2) + Math.pow((double)line[1], 2)) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); int count = scanner.nextInt(); for(int i=0; i<count; i++){ int a = scanner.nextInt(); int b = scanner.nextInt(); int c = scanner.nextInt(); a*=a; b*=b; c*=c; if(a+b==c || b+c==a || c+a==b){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.util.Arrays; import java.util.Scanner; public class Main { static Scanner sc = new java.util.Scanner(System.in); public static void main(String[] args) { int n = sc.nextInt(); for (int x = 0 ; x < n ; x++){ int a = sc.nextInt(); int b = sc.nextInt(); int c = sc.nextInt(); int [] array = new int [] {a,b,c}; Arrays.sort(array); int a2 = array[0]; int b2 = array[1]; int c2 = array[2]; if( a2 * a2 + b2 * b2 == c2 * c2 ){ System.out.println( "YES" ); }else{ System.out.println( "NO" ); } } } }
import java.io.BufferedReader; import java.io.InputStreamReader; import java.util.*; public class Main { final BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); final String LINE_SPR = System.getProperty("line.separator"); final int BIG_MOD = 1000000007; void run() throws Exception { int nt = ni(); for(int t = 0; t < nt; t++) { String[] nums = ns().split(" "); int a = Integer.parseInt(nums[0]); int b = Integer.parseInt(nums[1]); int c = Integer.parseInt(nums[2]); if(a * a + b * b == c * c || b * b + c * c == a * a || c * c + a * a == b * b) System.out.println("YES"); else System.out.println("NO"); } } void dumpObjArr(Object[] arr, int n) { for(int i = 0; i < n; i++) { System.out.print(arr[i]); if(i < n - 1) System.out.print(" "); } System.out.println(""); } void dumpObjArr2(Object[][] arr, int m, int n) { for(int j = 0; j < m; j++) dumpObjArr(arr[j], n); } int ni() throws Exception { return Integer.parseInt(br.readLine().trim()); } long nl() throws Exception { return Long.parseLong(br.readLine().trim()); } String ns() throws Exception { return br.readLine(); } boolean isPrime(int n) { for(int i=2;i<n;i++) { if(n%i==0) return false; } return true; } int getPrime(int n) { List<Integer> primes = new ArrayList<Integer>(); primes.add(2); int count = 1; int x = 1; while(primes.size() < n) { x+=2; int m = (int)Math.sqrt(x); for(int p : primes) { if(p > m) { primes.add(x); break; } if(x % p == 0) break; } } return primes.get(primes.size() - 1); } void gcjPrint(String str, int t) { System.out.println("Case #" + t + ": " + str); } public static void main(String[] args) throws Exception { new Main().run(); } }
import java.io.BufferedReader; import java.io.InputStreamReader; import java.util.*; public class Main { public static void main(String[] args) throws Exception { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int N = Integer.parseInt(br.readLine()); String line = br.readLine(); for(int i=0;i<N;i++){ String[] lines = line.split(" "); int a = Integer.parseInt(lines[0]); int b = Integer.parseInt(lines[1]); int c = Integer.parseInt(lines[2]); if(a*a+b*b==c*c || a*a+c*c==b*b || b*b+c*c==a*a){ System.out.println("YES"); }else{ System.out.println("NO"); } line = br.readLine(); } } }
import java.util.*; public class Main{ private static final Scanner scan = new Scanner(System.in); public static void main(String[] args){ List<String> list = new ArrayList<String>(); boolean flag = false; int[] tri = new int[3]; int N = scan.nextInt(); for(int a = 0; a < N; a++){ for(int i = 0; i < 3; i++){ tri[i] = scan.nextInt(); } for(int i = 0; i < 3 - 1; i++){ for(int j = 3 - 1; j > i; j--){ if(tri[i] < tri[j]){ int big = tri[j]; tri[j] = tri[i]; tri[i] = big; } } } if(Math.pow(tri[0], 2) == Math.pow(tri[1], 2) + Math.pow(tri[2], 2)){ flag = true; } else{ flag = false; } list.add(flag? "YES" : "NO"); } for(String s : list){ System.out.println(s); } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.StringTokenizer; public class Main { public static void main(String[] args) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); String line = ""; while ((line = br.readLine()) != null && !line.isEmpty()) { int N = Integer.parseInt(line); next: for (int i = 0; i < N; i++) { int[] num = new int[3]; StringTokenizer st = new StringTokenizer(br.readLine()); num[0] = Integer.parseInt(st.nextToken()); num[1] = Integer.parseInt(st.nextToken()); num[2] = Integer.parseInt(st.nextToken()); num[0] *= num[0]; num[1] *= num[1]; num[2] *= num[2]; for (int j = 0; j < 3; j++) { if (num[j % 3] == num[(j + 1) % 3] + num[(j + 2) % 3]) { System.out.println("YES"); continue next; } } System.out.println("NO"); } } } }
import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int n = sc.nextInt(); for (int i = 0; i < n; i++) { int a = sc.nextInt(); int b = sc.nextInt(); int c = sc.nextInt(); int a2 = a * a; int b2 = b * b; int c2 = c * c; if (a2 == b2 + c2 || b2 == a2 + c2 || c2 == a2 + b2) { System.out.println("YES"); } else System.out.println("NO"); } sc.close(); } }
import java.io.*; public class Main { public static void main(String[] args)throws IOException{ InputStreamReader is = new InputStreamReader(System.in); BufferedReader br =new BufferedReader(is); String c = br.readLine(); int n1 = Integer.parseInt(c); int[] n = new int[3]; for(int j = 0; j <n1; j++){ String str = br.readLine(); int space1 = str.indexOf(" "); int space2 = str.indexOf(" ", space1+1); String str1 = str.substring(0, space1); String str2 = str.substring(space1+1, space2); String str3 = str.substring(space2+1, str.length()); n[0] = Integer.parseInt(str1); n[1] = Integer.parseInt(str2); n[2] = Integer.parseInt(str3); int[] max = new int[3]; max[2] = n[0]; for(int i = 0; i <3; i++){ if(max[2] <= n[i]){ max[2] = n[i]; if(max[2] >= max[1]){ int re = max[1]; max[1] = max[2]; max[2] = re; if(max[1] >= max[0]){ int re2 = max[0]; max[0] = max[1]; max[1] = re2; } } } } if(max[0]*max[0] == max[1]*max[1] + max[2]*max[2]) System.out.println("YES"); else System.out.println("NO"); } } }
public class Main{ public void run(java.io.InputStream in,java.io.PrintStream out){ java.util.Scanner sc = new java.util.Scanner(in); int N, i, j; int[][] a; N = sc.nextInt(); a = new int[N][3]; for(i = 0;i < N;i++){ for(j = 0;j < 3;j++){ a[i][j] = sc.nextInt(); } } sc.close(); for(i = 0;i < N;i++){ if(a[i][0] * a[i][0] + a[i][1] * a[i][1] == a[i][2] * a[i][2]){ System.out.println("YES"); }else if(a[i][0] * a[i][0] + a[i][2] * a[i][2] == a[i][1] * a[i][1]){ System.out.println("YES"); }else if(a[i][2] * a[i][2] + a[i][1] * a[i][1] == a[i][0] * a[i][0]){ System.out.println("YES"); }else{ System.out.println("NO"); } } } public static void main(String[] args){ (new Main()).run(System.in,System.out); } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; public class Main { public static void main(String[] args) throws NumberFormatException, IOException { final String SPACE = " "; BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); StringBuilder sb = new StringBuilder(); final int cntData = Integer.parseInt(br.readLine()); int a; int b; int c; String data[] = new String[3]; String lineString; for (int i = 0; i < cntData; i++) { lineString = br.readLine(); data = lineString.split(SPACE); a = Integer.parseInt(data[0]); b = Integer.parseInt(data[1]); c = Integer.parseInt(data[2]); if (a * a + b * b == c * c) { sb.append("YES\r\n"); } else if (a * a + c * c == b * b) { sb.append("YES\r\n"); } else if (b * b + c * c == a * a) { sb.append("YES\r\n"); } else { sb.append("NO\r\n"); } } System.out.print(sb); } }
import java.io.*; import java.util.*; public class Main { public static void main(String[] args) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); ArrayList<Boolean> ans = new ArrayList<Boolean>(); int j = 0; int cnt = Integer.parseInt(br.readLine()); for (int i = 0; i < cnt; i++) { StringTokenizer st = new StringTokenizer(br.readLine()," "); int[] nums = new int[3]; while (st.hasMoreTokens()) nums[j++] = Integer.parseInt(st.nextToken()); Arrays.sort(nums); ans.add(nums[0] * nums[0] + nums[1] * nums[1] == nums[2] * nums[2]); j = 0; } for (boolean a : ans) System.out.println(a ? "YES" : "NO"); } }
import java.io.*; import java.util.*; public class Main { public static void main(String args[]) throws IOException { BufferedReader r = new BufferedReader(new InputStreamReader(System.in)); int n = Integer.valueOf(r.readLine()); for(int i = 0; i < n; i++) { String s = r.readLine(); int a = s.indexOf(" "); int z = s.lastIndexOf(" "); int[] arr = new int[3]; arr[0] = Integer.valueOf(s.substring(0, a)); arr[1] = Integer.valueOf(s.substring(a+1, z)); arr[2] = Integer.valueOf(s.substring(z+1)); Arrays.sort(arr); if((arr[2] * arr[2]) == arr[0] * arr[0] + arr[1] * arr[1]) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.util.Arrays; import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner scan = new Scanner(System.in); int firstNumber = scan.nextInt(); int i[] = new int[3]; for (int k = 0; k < firstNumber; k++) { for (int j = 0; j < i.length; j++) { i[j] = scan.nextInt(); } Arrays.sort(i); if ((i[2] * i[2]) == (i[1] * i[1]) + (i[0] * i[0])) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Arrays; class Main { public static void main(String[] arg) throws NumberFormatException, IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int DATE_QUANTITY = Integer.parseInt(br.readLine()); for (int i = 0; i < DATE_QUANTITY; i++) { String[] splitedLine = br.readLine().split(" "); int[] val = new int[3]; for (int j = 0; j < 3; j++) { int tmp = Integer.parseInt(splitedLine[j]); val[j] = (int) Math.pow(tmp, 2); } Arrays.sort(val); if ((val[0] + val[1]) == val[2]) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; public class Main{ public static void main(String[] args) throws IOException { String str; int a, b, c; BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); str = br.readLine(); int N = Integer.parseInt(str); for (int i = 0; i < N; i++) { str = br.readLine(); String[] num = str.split(" ", 0); a = Integer.parseInt(num[0]); b = Integer.parseInt(num[1]); c = Integer.parseInt(num[2]); if (a >= b && a >= c) { if (a * a == b * b + c * c) { System.out.println("YES"); } else { System.out.println("NO"); } } else { if (b >= a && b >= c) { if (b * b == a * a + c * c) { System.out.println("YES"); } else { System.out.println("NO"); } } else { if (c >= a && c >= b) { if (c * c == a * a + b * b) { System.out.println("YES"); } else { System.out.println("NO"); } } } } } } }
import java.io.BufferedReader; import java.io.InputStreamReader; public class Main { public static void main(String[] args) throws Exception { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); String lineCountStr = br.readLine(); for (int lineCount = 0; lineCount < Integer.parseInt(lineCountStr); lineCount ++) { String[] dataSetStr = br.readLine().split(" "); int[] dataSet = new int[dataSetStr.length]; for (int i = 0; i < dataSetStr.length; i ++) { dataSet[i] = Integer.parseInt(dataSetStr[i]); } if (dataSet[0] > dataSet[1]) { int tmp = dataSet[0]; dataSet[0] = dataSet[1]; dataSet[1] = tmp; } if (dataSet[1] > dataSet[2]) { int tmp = dataSet[1]; dataSet[1] = dataSet[2]; dataSet[2] = tmp; } if (Math.pow(dataSet[0], 2) + Math.pow(dataSet[1], 2) == Math.pow(dataSet[2], 2)) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.io.BufferedReader; import java.io.InputStreamReader; import java.io.IOException; import java.lang.Exception; import java.lang.Integer; import java.lang.String; import java.lang.System; import java.util.StringTokenizer; class Main { public static void main(String[] a) throws IOException { java.io.BufferedReader r = new java.io.BufferedReader(new java.io.InputStreamReader(System.in)); try { int count = Integer.parseInt(r.readLine()); String[] ans = new String[count]; for(int i = 0; i < count; i++) { String s = r.readLine(); StringTokenizer st = new StringTokenizer(s); int num[] = new int[4]; for(int j = 0; j < 3;j++) { num[j] = Integer.parseInt(st.nextToken()); if(num[0] < num[j]) { int tmp = num[0]; num[0] = num[j]; num[j] = tmp; } } if ( num[0] * num[0] == num[1] * num[1] + num[2] * num[2]) { ans[i] = "YES"; } else { ans[i] = "NO"; } } for(int i = 0; i < count; i++) { System.out.println(ans[i]); } } catch (Exception ex) { System.exit(0); } } }
import java.util.Scanner; public class Main{ public static void main(String[] args){ Scanner sc = new Scanner(System.in); int N = sc.nextInt(); int[] a = new int[1000]; int[] b = new int[1000]; int[] c = new int[1000]; for(int i=0; i<N; i++){ a[i] = sc.nextInt(); b[i] = sc.nextInt(); c[i] = sc.nextInt(); } for(int i=0; i<N; i++){ if(a[i]*a[i] == (b[i]*b[i] + c[i]*c[i]) || b[i]*b[i] == (a[i]*a[i] + c[i]*c[i]) || c[i]*c[i] == (b[i]*b[i] + a[i]*a[i])){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.io.BufferedReader; import java.io.InputStreamReader; public class Main { public static void main(String[] args) { try { Main test = new Main(); BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); int number = Integer.parseInt(reader.readLine()); int[] sides = new int[3]; for(int i = 0; i < number; i++) { String[] textArray = reader.readLine().split(" "); for(int j = 0; j < 3; j++) { sides[j] = Integer.parseInt(textArray[j]); } test.showAnswer(test.getMax(sides)); } } catch(Exception e) { e.printStackTrace(); } } int[] getMax(int[] array) { int[] targetArray = array; int max = targetArray[0]; int maxPosition = 0; for(int i = 1; i < targetArray.length; i++) { if(max < targetArray[i]) { max = targetArray[i]; maxPosition = i; } } int temporary = targetArray[0]; targetArray[0] = max; targetArray[maxPosition] = temporary; return targetArray; } void showAnswer(int[] array) { if(array.length != 3) { throw new IllegalArgumentException(); } if(array[0] * array[0] == array[1] * array[1] + array[2] * array[2]) { System.out.println("YES"); } else { System.out.println("NO"); } } }
import java.util.*; public class Main { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int n = Integer.parseInt(sc.nextLine()); for (int i = 0; i < n; i++) { int[] line = convertInt(sc.nextLine().split(" ")); sort(line); if ((line[2] * line[2]) == ((line[0] * line[0]) + (line[1] * line[1]))) { System.out.println("YES"); } else { System.out.println("NO"); } } } public static void sort(int[] array) { int n = array.length; for (int i = 0; i < n; i++) { for (int j = 1; j < n; j++) { if (array[j] < array[j - 1]) { int box = array[j - 1]; array[j - 1] = array[j]; array[j] = box; } } } } public static int[] convertInt(String[] str) { int n = str.length; int[] array = new int[n]; for (int i = 0; i < n; i++) { array[i] = Integer.parseInt(str[i]); } return array; } }
import java.io.*; import java.util.ArrayDeque; import java.util.ArrayList; import java.util.Collections; import java.util.List; import java.util.Scanner; import java.util.Stack; class Main { public static void main(String[] a) throws IOException { Scanner scan = new Scanner(System.in); int times = scan.nextInt(); for (int i = 0; i < times; i++) { int aa = scan.nextInt(); int b = scan.nextInt(); int c = scan.nextInt(); int twoa = aa * aa; int twob = b * b; int twoc = c * c; if (twoa == twoc + twob) { System.out.println("YES"); } else if (twob == twoc + twoa) { System.out.println("YES"); } else if (twoc == twob + twoa) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import static java.lang.Math.pow; import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Arrays; public class Main { public static void main(String[] args) throws IOException { BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); int numOfDataset = Integer.parseInt(reader.readLine()); for (int i = 0; i < numOfDataset; i++) { String[] sideLengths_Str = reader.readLine().split(" "); int[] sideLengths = new int[sideLengths_Str.length]; for (int j = 0; j < sideLengths_Str.length; j++) sideLengths[j] = Integer.parseInt(sideLengths_Str[j]); Arrays.sort(sideLengths); if (pow(sideLengths[2], 2) == pow(sideLengths[1], 2) + pow(sideLengths[0], 2)) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); int loopNum = scanner.nextInt(); for (int i = 0; i < loopNum; i++) { int a = scanner.nextInt(); int b = scanner.nextInt(); int c = scanner.nextInt(); if (isTriangle(a, b, c)) { System.out.println("YES"); } else { System.out.println("NO"); } } } private static boolean isTriangle(int a, int b, int c) { if (a >= b && a >= c) { return a * a == b * b + c * c; } else { if (b >= c) { return b * b == a * a + c * c; } else { return c * c == a * a + b * b; } } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; public class Main{ public static void main(String[] args) { BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); try { Integer dataNum = Integer.valueOf(in.readLine()); for (int i = 0; i < dataNum.intValue(); i++) { String[] problemData = in.readLine().split("\\s"); int max = 0; int other1 = 0; int other2 = 0; for (String data : problemData) { int dataInt = Integer.valueOf(data); other2 = other1; if (dataInt > max) { other1 = max; max = dataInt; } else { other1 = dataInt; } } if ((max * max) == (other1 * other1 + other2 * other2)) { System.out.println("YES"); } else { System.out.println("NO"); } } } catch (IOException e) { e.printStackTrace(); } finally { try { in.close(); } catch (IOException e) { e.printStackTrace(); } } } }
import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int n = Integer.parseInt(sc.nextLine()); for (int i = 0; i < n; i++) { String[] array = sc.nextLine().split("[\\s]"); int n1 = Integer.parseInt(array[0]); int n2 = Integer.parseInt(array[1]); int n3 = Integer.parseInt(array[2]); int swap = n3; if (n1 < n2 && n3 < n2) { n3 = n2; n2 = swap; } else if (n2 < n1 && n3 < n1) { n3 = n1; n1 = swap; } if ((n1 * n1) + (n2 * n2) == (n3 * n3)) { System.out.println("YES"); } else { System.out.println("NO"); } } sc.close(); } }
import java.io.InputStreamReader; import java.io.BufferedReader; import java.io.IOException; public class Main { public static void main(String args[] ) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int n = Integer.parseInt(br.readLine()); for (int i = 0; i < n; i++) { String s = br.readLine(); double a = Math.pow(Double.parseDouble(s.split(" ")[0]),2); double b = Math.pow(Double.parseDouble(s.split(" ")[1]),2); double c = Math.pow(Double.parseDouble(s.split(" ")[2]),2); if( a + b == c ){ System.out.println("YES"); } else if ( a + c == b) { System.out.println("YES"); } else if ( b + c == a) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.util.Arrays; import java.util.Scanner; public class Main{ public static void main(String[] args){ Scanner sc=new Scanner(System.in); final int cnt=sc.nextInt(); for(int i=0;i<cnt;i++){ Integer side[]=new Integer[3]; side[0]=sc.nextInt(); side[1]=sc.nextInt(); side[2]=sc.nextInt(); Arrays.sort(side); if((side[0]*side[0]+side[1]*side[1])==side[2]*side[2]){ System.out.println("YES"); }else System.out.println("NO"); } sc.close(); } }
import java.util.*; public class Main { public static void main(String args[]){ Scanner sc = new Scanner(System.in); int num = sc.nextInt(); while(num != 0){ ArrayList<Integer> tri = new ArrayList<Integer>(); tri.add(sc.nextInt()); tri.add(sc.nextInt()); tri.add(sc.nextInt()); Collections.sort(tri); if((Math.pow(tri.get(0),2)+Math.pow(tri.get(1),2))!=Math.pow(tri.get(2),2)){ System.out.println("NO"); }else{ System.out.println("YES"); } num--; } sc.close(); } }
import java.util.Scanner; public class Main { public static void main(String[] args) throws Exception { Scanner sc = new Scanner(System.in); int n = sc.nextInt(); for (int i = 0; i < n; i++) { int a = sc.nextInt(); int b = sc.nextInt(); int c = sc.nextInt(); boolean bo = isTriangle(a, b, c) || isTriangle(b, c, a) || isTriangle(c, a, b); if (bo) { System.out.println("YES"); } else { System.out.println("NO"); } } } public static boolean isTriangle(int a, int b, int c) { return Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2)) == c; } }
import java.io.BufferedReader; import java.io.InputStreamReader; import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner scan=new Scanner(new BufferedReader(new InputStreamReader(System.in))); try { int t=scan.nextInt(); while(t--!=0){ int x,y,z; x=scan.nextInt(); y=scan.nextInt(); z=scan.nextInt(); int a=x*x; int b=y*y; int c=z*z; if(a+b==c) System.out.println("YES"); else if(b+c==a) System.out.println("YES"); else if(c+a==b) System.out.println("YES"); else System.out.println("NO"); } } catch (Exception e) { } } }
import java.util.*; public class Main { private boolean isRightTri(double a, double b, double c){ final double EPS = 1.0e-08; double sum = Math.pow(a, 2) + Math.pow(b, 2); sum = Math.sqrt(sum); if(Math.abs(sum - c) < EPS){ return true; } else{ return false; } } public void doIt(){ Scanner sc = new Scanner(System.in); int n = sc.nextInt(); for(int i=0; i < n; i++){ double a = sc.nextDouble(); double b = sc.nextDouble(); double c = sc.nextDouble(); if(a > c){ double temp = a; a = c; c = temp; } if(b > c){ double temp = b; b = c; c = temp; } if(isRightTri(a,b,c)) System.out.println("YES"); else System.out.println("NO"); } } public static void main(String[] args) { Main obj = new Main(); obj.doIt(); } }
import java.io.BufferedReader; import java.io.IOException; public class Main { public static void main(String[] args) throws NumberFormatException, IOException { BufferedReader read = new BufferedReader( new java.io.InputStreamReader(System.in)); int x = Integer.parseInt(read.readLine()); for(int i=0;i<x;i++){ String y= read.readLine(); String z [] =y.split(" "); int a=Integer.parseInt(z[0]); int b=Integer.parseInt(z[1]); int c=Integer.parseInt(z[2]); a=a*a; b=b*b; c=c*c; if (a==(b+c)){ System.out.println("YES"); }else if (b==(a+c)){ System.out.println("YES"); }else if(c==(a+b)){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.io.IOException; import java.util.Scanner; class Main { public static void main(String[] args) throws IOException { Scanner sc = new Scanner(System.in); sc.useDelimiter("\\n"); int setOfData = 0; while(sc.hasNext()) { String str = sc.nextLine(); String[] splitted = str.split(" "); int length = splitted.length; if(length == 1) { setOfData = numOfSet(splitted); } else if(length == 3) { if(isRightAngle(splitted)) { System.out.println("YES"); } else { System.out.println("NO"); } } else { } } if (sc.ioException() != null) { throw sc.ioException(); } } public static int numOfSet(String[] string) { return Integer.valueOf(string[0]); } public static Boolean isRightAngle(String[] string) { int x = Integer.valueOf(string[0]); int y = Integer.valueOf(string[1]); int z = Integer.valueOf(string[2]); x = x*x; y = y*y; z = z*z; if(x == y+z || y == x+z || z == x+y) { return true; } else { return false; } } }
import static java.lang.Integer.parseInt; import static java.lang.Math.pow; import static java.lang.System.out; import java.io.File; import java.util.Scanner; public class Main { public static void main(String args[]) { new Main().right(); } public void right() { try (Scanner scan = new Scanner(System.in)) { scanInData(scan); } catch (Exception e) { System.exit(0); } } public void right(String inDataPath) { try (Scanner scan = new Scanner(new File(inDataPath))) { scanInData(scan); } catch (Exception e) { e.printStackTrace(); } } public void scanInData(Scanner scan) { int dataCount = parseInt(scan.nextLine()); for (int i = 0; i < dataCount; i++) { String[] data = scan.nextLine().split(" "); printJudgeTriangle(parseInt(data[0]), parseInt(data[1]), parseInt(data[2])); } } public void printJudgeTriangle(int a, int b, int c) { if (judgeTriangle(a, b, c) || judgeTriangle(b, c, a) || judgeTriangle(c, a, b)) { out.println("YES"); } else { out.println("NO"); } } public boolean judgeTriangle(int x, int y, int z) { return pow(x, 2) + pow(y, 2) == pow(z, 2); } }
import java.util.Scanner; public class Main { static int a = 0; static int b = 0; static int c = 0; public static void main(String[] args) { Scanner scanner = new Scanner(System.in); int loopNum = scanner.nextInt(); for (int i = 0; i < loopNum; i++) { a = scanner.nextInt(); b = scanner.nextInt(); c = scanner.nextInt(); if (isTriangle(a, b, c)) { System.out.println("YES"); } else { System.out.println("NO"); } } } private static boolean isTriangle(int a, int b, int c) { if (a >= b && a >= c) { return a * a == b * b + c * c; } else { if (b >= c) { return b * b == a * a + c * c; } else { return c * c == a * a + b * b; } } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; public class Main { public static void main(String[] args) throws NumberFormatException, IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int n = Integer.parseInt(br.readLine()); StringBuilder sb = new StringBuilder(); String[] s; int a, b, c; for(int i = 0; i < n; ++i) { s = br.readLine().split(" "); a = Integer.parseInt(s[0]); b = Integer.parseInt(s[1]); c = Integer.parseInt(s[2]); if(a*a == b*b + c*c || b*b == c*c + a*a || c*c == a*a + b*b) { sb.append("YES\n"); }else{ sb.append("NO\n"); } } System.out.print(sb); } }
import java.util.*; public class Main { public static void main(String[] args) { int x=0,y=0,a=0,b=0,c=0; Scanner sc=new Scanner(System.in); x=sc.nextInt(); for(int i=0;i<x;i++){ a=sc.nextInt(); b=sc.nextInt(); c=sc.nextInt(); if(a>=b && a>=c); else if(b>=c){ y=c; c=a; a=b; b=y; } else if(c>=b){ y=b; b=a; a=c; c=y; } if(a*a==b*b+c*c)System.out.println("YES"); else System.out.println("NO"); } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStream; import java.io.InputStreamReader; import java.io.PrintWriter; import java.util.Scanner; import java.util.StringTokenizer; public class Main { static InputReader in; static PrintWriter out; static class Solution { void solve() throws IOException { int N = in.nextInt(); for (int i = 0; i < N; i++) { int a = in.nextInt(); int b = in.nextInt(); int c = in.nextInt(); if (a*a == b*b + c*c || b*b == c*c + a*a || c*c == a*a + b*b) { out.println("YES"); } else { out.println("NO"); } } } } public static void main(String[] args) throws IOException { in = new InputReader(System.in); out = new PrintWriter(System.out); Solution solver = new Solution(); solver.solve(); out.close(); } static class InputReader { public BufferedReader br; public StringTokenizer st; public InputReader(InputStream stream) { br = new BufferedReader(new InputStreamReader(stream)); } public int nextInt() throws IOException { while (st == null || !st.hasMoreTokens()) { st = new StringTokenizer(br.readLine()); } return Integer.parseInt(st.nextToken()); } public long nextLong() throws IOException { while (st == null || !st.hasMoreTokens()) { st = new StringTokenizer(br.readLine()); } return Long.parseLong(st.nextToken()); } public String next() throws IOException { while (st == null || !st.hasMoreTokens()) { st = new StringTokenizer(br.readLine()); } return st.nextToken(); } public double nextDouble() throws IOException { while (st == null || !st.hasMoreTokens()) { st = new StringTokenizer(br.readLine()); } return Double.parseDouble(st.nextToken()); } } }
import java.util.Arrays; import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int N = sc.nextInt(); for(;N-->0;) { int[] l = new int[3]; for (int i = 0; i < 3; i++) l[i] = sc.nextInt(); Arrays.sort(l); System.out.println(lensq(l[0], l[1]) == sq(l[2]) ? "YES" : "NO"); } } private static int lensq(int x, int y) { return sq(x) + sq(y); } private static int sq(int n) { return n * n; } }
import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int N = sc.nextInt(); int[][] t = new int[N][3]; int tmp; for(int i=0;i<N;i++){ for(int j=0;j<3;j++){ t[i][j] = sc.nextInt(); if(j==1&&t[i][0]>t[i][1]){ tmp = t[i][0]; t[i][0] = t[i][1]; t[i][1] = tmp; } if(j==2&&t[i][1]>t[i][2]){ tmp = t[i][1]; t[i][1] = t[i][2]; t[i][2] = tmp; } } } for(int i=0;i<N;i++){ if(t[i][0]*t[i][0]+t[i][1]*t[i][1]==t[i][2]*t[i][2]){ System.out.println("YES"); } else{ System.out.println("NO"); } } } }
import java.util.ArrayList; import java.util.Collections; import java.util.Scanner; public class Main { public static Scanner scanner = new Scanner(System.in); public static void main(String[] args) { int N = input(); for (int i = 0; i < N; i++) { ArrayList<Integer> numList = new ArrayList<>(); for (int j = 0; j < 3; j++) { numList.add(input()); } Collections.sort(numList); if (isRight(numList.get(2), numList.get(1), numList.get(0))) { System.out.println("YES"); } else { System.out.println("NO"); } } close(); } public static boolean isRight(int longSide, int shortSideA, int shortSideB) { return Math.pow(longSide, 2) == Math.pow(shortSideA, 2) + Math.pow(shortSideB, 2); } public static int input() { return scanner.nextInt(); } public static void close() { if (scanner != null) { scanner.close(); } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.StringTokenizer; class Main{ public static void main(String[] args)throws IOException{ BufferedReader br=new BufferedReader(new InputStreamReader(System.in)); String name=br.readLine(); int kaz=Integer.parseInt(name); int num; int compare; int[] a=new int[3]; int big; int i=0; for(int j=0; j<kaz; j++){ name=br.readLine(); try{ StringTokenizer st=new StringTokenizer(name," "); while (st.hasMoreTokens()) { a[i]=Integer.parseInt(st.nextToken()); i++; }i=0; a[0]*=a[0]; a[1]*=a[1]; a[2]*=a[2]; big = Math.max((Math.max(a[0], a[1])),(Math.max(a[0], a[2]))); if(big==a[0]){ if(a[0]==a[1]+a[2]){ System.out.println("YES"); } else{ System.out.println("NO"); } } else if(big==a[1]){ if(a[1]==a[2]+a[0]){ System.out.println("YES"); } else{ System.out.println("NO"); } } else if(big==a[2]){ if(a[2]==a[1]+a[0]){ System.out.println("YES"); } else{ System.out.println("NO"); } } a[0]=0; a[1]=0; a[2]=0; } catch(Exception e){ System.exit(0); } } } }
import java.io.IOException; import java.io.BufferedReader; import java.io.InputStreamReader; public class Main{ public static void main(String[] args) throws IOException{ BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int n = Integer.parseInt(br.readLine()); for(int i= 0; i < n; i++){ String[] input = br.readLine().split(" "); int a = Integer.parseInt(input[0]); int b = Integer.parseInt(input[1]); int c = Integer.parseInt(input[2]); boolean isRight = false; if(a>=c && a>=b) isRight = (a*a == b*b + c*c); else if(b>=c && b>=a) isRight = (b*b == c*c + a*a); else if(c>=a && c>=b) isRight = (c*c == a*a + b*b); if(isRight) System.out.println("YES"); else System.out.println("NO"); } } }
import java.util.Arrays; import java.util.Scanner; public class Main { private static boolean isTriangle(int a,int b,int c) { int[] edge={a,b,c}; Arrays.sort(edge); return edge[0]*edge[0]+edge[1]*edge[1]==edge[2]*edge[2]; } public static void main(String[] args) { Scanner scan=new Scanner(System.in); int N=scan.nextInt(); int a,b,c; for(int i=0;i<N;i++){ a=scan.nextInt(); b=scan.nextInt(); c=scan.nextInt(); if(isTriangle(a,b,c)){ System.out.println("YES"); }else{ System.out.println("NO"); } } scan.close(); } }
import java.util.Scanner; class Main{ public static void main(String[] a){ int num1[] = new int[1000]; int num2[] = new int[1000]; int num3[] = new int[1000]; int num,i = 0; Scanner scanner = new Scanner(System.in); num = Integer.parseInt(scanner.next()); for(i=0; i<num; i++) { num1[i] = Integer.parseInt(scanner.next()); num2[i] = Integer.parseInt(scanner.next()); num3[i] = Integer.parseInt(scanner.next()); if((Math.pow(num1[i], 2) + Math.pow(num2[i], 2) == Math.pow(num3[i], 2)) || (Math.pow(num1[i], 2) + Math.pow(num3[i], 2) == Math.pow(num2[i], 2)) || (Math.pow(num2[i], 2) + Math.pow(num3[i], 2) == Math.pow(num1[i], 2))){ System.out.println("YES"); } else{ System.out.println("NO"); } } scanner.close(); } }
import java.util.Scanner; public class Main{ public static void main(String[] args){ int i,j,k,a,b,c; String[] data; Scanner scan = new Scanner(System.in); k = scan.nextInt(); data = new String[k]; i = 0; while(i < k){ a = scan.nextInt(); b = scan.nextInt(); c = scan.nextInt(); a=a*a; b=b*b; c=c*c; if(a>b && a>c){ b = b + c; if(a == b){ data[i]="YES"; }else{ data[i]="NO"; } }else if(b>a && b>c){ a = a + c; if(b == a){ data[i]="YES"; }else{ data[i]="NO"; } }else if(c>a && c>b){ a = a + b; if(c == a){ data[i]="YES"; }else{ data[i]="NO"; } }else{ data[i]="NO"; } i++; } j = 0; while(j < i){ System.out.println(data[j]); j++; } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; public class Main { public static void main(String args[]) throws NumberFormatException, IOException { BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); int dataCount = Integer.parseInt(reader.readLine()); String[] inputDataList = new String[dataCount]; for (int i = 0; i < dataCount; i++) { inputDataList[i] = reader.readLine(); } for (int i = 0; i < dataCount; i++) { String[] data = inputDataList[i].split(" "); int a = Integer.parseInt(data[0]); int b = Integer.parseInt(data[1]); int c = Integer.parseInt(data[2]); if (Math.pow(a, 2) + Math.pow(b, 2) == Math.pow(c, 2)) { System.out.println("YES"); } else if (Math.pow(b, 2) + Math.pow(c, 2) == Math.pow(a, 2)) { System.out.println("YES"); } else if (Math.pow(c, 2) + Math.pow(a, 2) == Math.pow(b, 2)) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Arrays; public class Main { private static final String RIGHT_TRIANGLE = "YES"; private static final String NOT_RIGHT_TRIANGLE = "NO"; public static void main(String[] args) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int lineCount = Integer.parseInt(br.readLine()); for (int i = 0; i < lineCount; i++) { String[] input = br.readLine().split(" "); int[] side = { Integer.parseInt(input[0]), Integer.parseInt(input[1]), Integer.parseInt(input[2])}; Arrays.sort(side); if (side[2] * side[2] == side[0] * side[0] + side[1] * side[1]) { System.out.println(RIGHT_TRIANGLE); } else { System.out.println(NOT_RIGHT_TRIANGLE); } } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.StringTokenizer; public class Main { public static void main(String[] args) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); String str; StringTokenizer st1; int[] tri = new int[3]; str=br.readLine(); int count=Integer.parseInt(str); for(int i=0;i<count;i++){ st1=new StringTokenizer(br.readLine()," "); tri[0]=Integer.parseInt(st1.nextToken()); tri[1]=Integer.parseInt(st1.nextToken()); tri[2]=Integer.parseInt(st1.nextToken()); sortTri(tri); if(tri[0]*tri[0]+tri[1]*tri[1] == tri[2]*tri[2]){ System.out.println("YES"); }else{ System.out.println("NO"); } } } public static void sortTri(int[] num){ int tmp; for(int i=0;i<num.length-1;i++){ for(int j=i+1;j<num.length;j++){ if(num[i]>num[j]){ tmp=num[i]; num[i]=num[j]; num[j]=tmp; } } } } }
import java.util.Arrays; import java.util.Scanner; class Main { public static int[] a = new int[3]; public static void main(String[] args) { Scanner cin = new Scanner(System.in); int n = cin.nextInt(); while(0 != n--){ for (int i = 0; i < a.length; i++) { a[i] = cin.nextInt(); } solve(); } } public static void solve() { Arrays.sort(a); System.out.println(a[0] * a[0] + a[1] * a[1] == a[2] * a[2] ? "YES" : "NO"); } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Arrays; class Main { public static void main(String[] args) { BufferedReader reader = new BufferedReader(new InputStreamReader( System.in)); int loop = Integer.parseInt(readLine(reader)); for (int i = 0; i < loop; i++) { String[] sideArray = readLine(reader).split(" "); int[] sideNumArray = new int[sideArray.length]; for (int j = 0; j < sideNumArray.length; j++) { sideNumArray[j] = Integer.parseInt(sideArray[j]); } Arrays.sort(sideNumArray); int smallTwo = sideNumArray[0] * sideNumArray[0] + sideNumArray[1] * sideNumArray[1]; int largeOne = sideNumArray[2] * sideNumArray[2]; if (smallTwo == largeOne) { System.out.println("YES"); } else { System.out.println("NO"); } } } private static String readLine(BufferedReader reader) { String line = null; try { line = reader.readLine(); } catch (IOException e) { throw new RuntimeException(); } return line; } }
import java.util.*; public class Main{ private static final Scanner scan = new Scanner(System.in); public static void main(String[] args){ int N = scan.nextInt(); for(int i = 0; i < N; i++){ int a = scan.nextInt(); int b = scan.nextInt(); int c = scan.nextInt(); if(a * a == b * b + c * c | b * b == a * a + c * c | c * c == a * a + b * b){ System.out.println("YES"); } else{ System.out.println("NO"); } } } }
import java.util.Arrays; import java.util.Comparator; import java.util.Scanner; class Main { Scanner sc = new Scanner(System.in); public void run() { int N=sc.nextInt(); while(N--!=0){ int[] edge=new int[]{ sc.nextInt(),sc.nextInt(),sc.nextInt() }; Arrays.sort(edge); ln((edge[2]*edge[2]==edge[0]*edge[0]+edge[1]*edge[1])?"YES":"NO"); } } public static void main(String[] args) { new Main().run(); } public static void pr(Object o) { System.out.print(o); } public static void ln(Object o) { System.out.println(o); } public static void ln() { System.out.println(); } }
import java.util.Scanner; public class Main { public static void main(String[] args){ Scanner s = new Scanner(System.in); int a , b , c , max_num1, max_num2; int res_flg; int n = Integer.parseInt(s.nextLine()); for(int i = 0;i<n;i++){ String line = s.nextLine(); String[] array = line.split(" ",0); a = Integer.parseInt(array[0]); b = Integer.parseInt(array[1]); c = Integer.parseInt(array[2]); if(a >= b && a >= c){ if(a*a == b*b+c*c){ res_flg = 1; }else{ res_flg = 0; } } else if(b >= a && b >= c){ if(b*b == a*a+c*c){ res_flg = 1; }else{ res_flg = 0; } } else if(c >= a && c >= b){ if(c*c == b*b+a*a){ res_flg = 1; }else{ res_flg = 0; } }else{ res_flg = 0; } if(res_flg == 0){ System.out.println("NO"); }else{ System.out.println("YES"); } } } }
import java.util.Scanner; public class Main { public static void main(String arg[]) { Scanner scan = new Scanner(System.in); int n = scan.nextInt(); for(int i =0; i<n; i++) { int a=scan.nextInt(); int b=scan.nextInt(); int c=scan.nextInt(); if(a*a==b*b+c*c) System.out.println("YES"); else if(b*b==a*a+c*c) System.out.println("YES"); else if(c*c==a*a+b*b) System.out.println("YES"); else System.out.println("NO"); } } }
import java.util.Scanner; public class Main { public static void main(String[] args){ Scanner scan = new Scanner(System.in); int n = scan.nextInt(); while(scan.hasNext()){ int a = scan.nextInt(); int b = scan.nextInt(); int c = scan.nextInt(); if(a*a == b*b + c*c || b*b == a*a + c*c || c*c == b*b + a*a){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.util.*; class Main{ public static void main(String[] args) { Scanner sc=new Scanner(System.in); int x = sc.nextInt(); for(int i=0;i<x; i++){ int [] a = {sc.nextInt(),sc.nextInt(),sc.nextInt()}; Arrays.sort(a); if(a[0]*a[0] + a[1]*a[1] == a[2]*a[2]) { System.out.println("YES"); }else { System.out.println("NO"); } } } }
import java.util.Scanner; public class Main { public static void main(String a[]){ Scanner sc = new Scanner(System.in); int N = sc.nextInt(); for(int i=0;i<N;i++){ int b = sc.nextInt(); int c = sc.nextInt(); int d = sc.nextInt(); System.out.println(isRightTriangle(b,c,d)); } sc.close(); } public static String isRightTriangle(int a, int b ,int c){ if(a>b){ int k = a; a = b; b = k; } if(b>c){ int k = b; b = c; c= k; } if(c*c == a*a+b*b) return "YES"; else return "NO"; } }
import java.io.*; import java.util.Arrays; class Main { public static void main(String[] args) { try{ BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); StringBuilder sb = new StringBuilder(); int N = Integer.parseInt(br.readLine()); int[] edges = new int[3]; for(int i = 0; i < N; i++){ String[] str = br.readLine().split(" "); for(int j = 0; j < 3; j++){ edges[j] = Integer.parseInt(str[j]); } Arrays.sort(edges); if(Math.pow(edges[2], 2) == Math.pow(edges[0], 2) + Math.pow(edges[1], 2)){ sb.append("YES").append("\n"); }else { sb.append("NO").append("\n"); } } System.out.print(sb); }catch(Exception e){ System.out.println(e); } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; public class Main{ public static void main(String[] args) throws IOException{ BufferedReader bf=new BufferedReader(new InputStreamReader(System.in)); int n=Integer.parseInt(bf.readLine()); StringBuilder ans=new StringBuilder(); for(int i=0;i<n;i++){ String[] str=bf.readLine().split(" "); double x=Math.pow(Integer.parseInt(str[0]),2); double y=Math.pow(Integer.parseInt(str[1]),2); double z=Math.pow(Integer.parseInt(str[2]),2); if(x+y==z || x+z==y || y+z==x) ans.append("YES\n"); else ans.append("NO\n"); } System.out.print(ans); } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; public class Main{ public static void main(String args[]) throws IOException{ InputStreamReader inputStreamReader = new InputStreamReader(System.in); BufferedReader bufferedReader = new BufferedReader(inputStreamReader); int n = Integer.parseInt(bufferedReader.readLine()); StringBuilder answer = new StringBuilder(); for(int i=0; i<n; i++){ String[] dataSet = bufferedReader.readLine().split(" "); double x = Math.pow(Integer.parseInt(dataSet[0]), 2); double y = Math.pow(Integer.parseInt(dataSet[1]), 2); double z = Math.pow(Integer.parseInt(dataSet[2]), 2); if(x+y==z || x+z==y || y+z==x){ answer.append("YES\n"); }else{ answer.append("NO\n"); } } System.out.print(answer); } }
import java.io.BufferedReader; import java.io.InputStreamReader; import java.util.Arrays; import java.util.StringTokenizer; public class Main { private final static String NEG = "NO\n"; private final static String AFF = "YES\n"; public static void main(String[] args) throws Exception { BufferedReader br = new BufferedReader( new InputStreamReader(System.in), 1024); int number = Integer.parseInt(br.readLine()); int sides[] = new int[3]; StringTokenizer tknz; StringBuilder builder = new StringBuilder(); for (; 0 < number; number--) { tknz = new StringTokenizer(br.readLine()); for (int i = 0; i < 3; i++) { sides[i] = Integer.parseInt(tknz.nextToken()); } Arrays.sort(sides); if (sides[1] % 2 != 0) { builder.append(NEG); } else if (sides[0] * sides[1] * sides[2] % 60 != 0) { builder.append(NEG); } else if (Math.pow(sides[0], 2) + Math.pow(sides[1], 2) != Math .pow(sides[2], 2)) { builder.append(NEG); } else { builder.append(AFF); } } System.out.print(builder); } }
import java.util.*; import java.lang.*; import java.math.*; class Main { Scanner sc = new Scanner(System.in); void run() { int[] x = new int[3]; int n = sc.nextInt(); for (int i=0;i<n;i++) { for (int j=0; j<3;j++) { x[j] = sc.nextInt(); x[j] *= x[j]; } Arrays.sort(x); if ( x[0] + x[1] == x[2] ) System.out.println("YES"); else System.out.println("NO"); } return; } public static void main(String[] args) { new Main().run(); } }
import java.io.*; import java.util.*; public class Main { public static void main(String[] args) throws java.io.IOException{ Scanner scan = new Scanner(System.in); int n = scan.nextInt(); scan.nextLine(); for(int i=0;i<n;i++){ int [] tri =new int[3]; tri[0]=scan.nextInt(); tri[1]=scan.nextInt(); tri[2]=scan.nextInt(); Arrays.sort(tri); if(Math.pow(tri[0],2)+Math.pow(tri[1], 2) == Math.pow(tri[2], 2)) System.out.println("YES"); else System.out.println("NO"); } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; public class Main { public static void main(String[] args)throws IOException { BufferedReader br=new BufferedReader (new InputStreamReader(System.in)); int n,s=0; String[] str; long[] hen=new long[3]; n=Integer.parseInt(br.readLine()); StringBuilder out=new StringBuilder(); for(int i=0;i<n;i++){ str=br.readLine().split(" "); long max=0; for(int j=0;j<3;j++){ hen[j]=Integer.parseInt(str[j]); if(max<hen[j]){ max=hen[j]; s=j;} } hen[s]=0; if(max*max == hen[0]*hen[0]+hen[1]*hen[1]+hen[2]*hen[2]){ out.append("YES" + "\n"); }else out.append("NO"+"\n"); } out.delete(out.length()-1,out.length()); System.out.println(out); } }
import java.util.Arrays; import java.util.Scanner; class Main{ public static void main(String[] a){ Scanner sc = new Scanner(System.in); int j = sc.nextInt(); for(int i = 0; i < j; i++){ int[] d = new int[3]; for(int k = 0; k < 3; k++){ d[k] = sc.nextInt(); } Arrays.sort(d); if(d[2] * d[2] == d[0] * d[0] + d[1] * d[1]){ System.out.println("YES"); }else{ System.out.println("NO"); } } sc.close(); } }
import java.io.*; public class Main { public static void main(String[] args) throws IOException { BufferedReader buf = new BufferedReader(new InputStreamReader(System.in)); int N = Integer.parseInt(buf.readLine()); String[] list; String[] check = new String[N]; int i,j,l; for(int k=0; k<N; k++){ list = buf.readLine().split(" "); i = Integer.parseInt(list[0]); j = Integer.parseInt(list[1]); l = Integer.parseInt(list[2]); check[k] = Check(i,j,l); } for(int k = 0; k<N; k++){ System.out.println(check[k]); } } public static String Check(int a,int b,int c){ if(a-b >0 && a-c>0){ if(a*a == b*b + c*c){ return"YES"; }else{ return "NO"; } }else if(b-a >0 && b-c>0){ if(b*b == a*a + c*c){ return "YES"; }else{ return "NO"; } }else{ if(c*c == b*b + a*a){ return "YES"; }else{ return "NO"; } } } }
import java.io.PrintStream; import java.util.Arrays; import java.util.Scanner; class Main { public static void main(String[] args) { doit(args, new Scanner(System.in), System.out); } static void doit(String[] args, Scanner scanner, PrintStream out) { int n = scanner.nextInt(); for (int i = 0; i < n; i++) { int[] lengths = { scanner.nextInt(), scanner.nextInt(), scanner.nextInt() }; Arrays.sort(lengths); String result = lengths[0] * lengths[0] + lengths[1] * lengths[1] == lengths[2] * lengths[2] ? "YES" : "NO"; out.println(result); } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; public class Main { public static void main(String[] args) throws IOException { BufferedReader in = new BufferedReader(new InputStreamReader(System.in)); String[] strTemp; int numberOfTriangle, data1, data2, data3; numberOfTriangle = Integer.parseInt(in.readLine()); Triangle[] triangles = new Triangle[numberOfTriangle]; for (int i = 0; i < numberOfTriangle; i++) { strTemp = in.readLine().split(" "); data1 = Integer.parseInt(strTemp[0]); data2 = Integer.parseInt(strTemp[1]); data3 = Integer.parseInt(strTemp[2]); triangles[i] = new Triangle(data1, data2, data3); } for (int j = 0; j < triangles.length; j++) { if (triangles[j].check()) { System.out.println("YES"); } else { System.out.println("NO"); } } } } class Triangle { private int id, data1, data2, data3, count; private Triangle[] triangles; public Triangle(int data1, int data2, int data3) { this.data1 = data1; this.data2 = data2; this.data3 = data3; } public boolean check() { int temp1, temp2, temp3; temp1 = (int) Math.pow(data1, 2); temp2 = (int) Math.pow(data2, 2); temp3 = (int) Math.pow(data3, 2); if (temp1 == temp2 + temp3 || temp2 == temp1 + temp3 || temp3 == temp1 + temp2) { return true; } else { return false; } } }
import java.util.Scanner; public class Main{ public static void main(String[] args) { Scanner sc = new Scanner(System.in); int times = sc.nextInt(); for(int i = 0; i < times; i++){ int[] nums = new int[3]; for(int j=0; j < nums.length; j++){ nums[j]=sc.nextInt(); } if(isCRight(nums[0],nums[1],nums[2]) || isCRight(nums[1], nums[2],nums[0]) || isCRight(nums[2], nums[0],nums[1])){ System.out.println("YES"); }else{ System.out.println("NO"); } } } private static boolean isCRight(int a, int b, int c){ return a*a + b*b ==c *c; } }
import java.util.*; class Main{ public static void main(String[] args){ Scanner sc=new Scanner(System.in); int n=sc.nextInt(); int[][] t=new int[n][3]; for(int i=0;i<n;i++){ for(int j=0;j<3;j++){ t[i][j]=sc.nextInt(); } if(triangle(i,t)){System.out.println("YES");} else{System.out.println("NO");} } } public static boolean triangle(int i,int[][] t){ double max=Math.max(Math.max(t[i][0],t[i][1]),t[i][2]); double res=Math.min(Math.min(Math.hypot(t[i][0],t[i][1]),Math.hypot(t[i][0],t[i][2])),Math.hypot(t[i][2],t[i][1])); if(res==max){return true;} else{return false;} } }
import java.io.BufferedReader; import java.io.InputStreamReader; public class Main{ public static void main(String[] args) throws Exception { boolean[] arg = null; int length=0; int i=0; boolean first=true; try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) { String line; while ((line = br.readLine()) != null) { if(first){ length=Integer.parseInt(line); arg=new boolean[length]; first=false; }else{ String[] tokens = line.split(" "); int max,mid,min; int a= Integer.parseInt(tokens[0]); int b = Integer.parseInt(tokens[1]); int c = Integer.parseInt(tokens[2]); max=Integer.max(Integer.max(a, b),Integer.max(c, b)); min=Integer.min(Integer.min(a, b),Integer.min(c, b)); if(max!=a&&min!=a){ mid=a; }else if(max!=b&&min!=b){ mid=b; }else if(max!=c&&min!=c){ mid=c; }else{ mid=a; } arg[i]=max*max==min*min+mid*mid; i++; if(i==length){ break; } } } for(int j=0;j<i;j++){ System.out.println(arg[j]?"YES":"NO"); } } } }
import java.util.Scanner; class Main{ public static void main(String[] args){ Scanner sc = new Scanner(System.in); int n = sc.nextInt(); while(n-- > 0){ int a = sc.nextInt(); int b = sc.nextInt(); int c = sc.nextInt(); if(a<b){ int s = a; a = b; b = s; } if(a<c){ int s = a; a = c; c = s; } if((a*a)==((b*b)+(c*c))){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; public class Main { public static void main(String[] args) throws IOException { try(BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) { int n = Integer.parseInt(br.readLine()); String[] line; int[] l = new int[]{0,0,0}; String ans; StringBuilder result = new StringBuilder(); for(int i=0; i<n; i++) { ans = "NO"; line = br.readLine().split(" "); l[0] = Integer.parseInt(line[0]); l[1] = Integer.parseInt(line[1]); l[2] = Integer.parseInt(line[2]); for(int j=0,t; j<3; j++) { for(int k=0; k<3; k++) { if( l[j] < l[k] ) { t = l[j]; l[j] = l[k]; l[k] = t; } } } if( l[0]*l[0] + l[1]*l[1] == l[2]*l[2] ) ans = "YES"; result.append( ans ).append("\n"); } System.out.print(result); } } }
import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner stdin = new Scanner(System.in); int n = stdin.nextInt(); int[] a = new int[n]; int[] b = new int[n]; int[] c = new int[n]; for(int i = 0; i < n; i++) { a[i] = stdin.nextInt(); b[i] = stdin.nextInt(); c[i] = stdin.nextInt(); } for(int i = 0; i < n; i++) { if(a[i] * a[i] + b[i] * b[i] == c[i] * c[i]) { System.out.println("YES"); } else if(b[i] * b[i] + c[i] * c[i] == a[i] * a[i]) { System.out.println("YES"); } else if(c[i] * c[i] + a[i] * a[i] == b[i] * b[i]) { System.out.println("YES"); }else { System.out.println("NO"); } } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Arrays; public class Main { private static final String RIGHT_TRIANGLE = "YES"; private static final String NOT_RIGHT_TRIANGLE = "NO"; public static void main(String[] args) throws IOException { BufferedReader bufferedReader = new BufferedReader( new InputStreamReader(System.in)); int numsOfDataSets = Integer.parseInt(bufferedReader.readLine()); for (int i = 0; i < numsOfDataSets; i++) { String[] triangle = bufferedReader.readLine().split("\\s"); int[] sides = getIntArray(triangle); if (isRightTriangle(sides)) { System.out.println(RIGHT_TRIANGLE); } else { System.out.println(NOT_RIGHT_TRIANGLE); } } bufferedReader.close(); } private static boolean isRightTriangle(int[] sides) { Arrays.sort(sides); if (calcSumPower(sides[0], sides[1]) == calcPower(sides[2])) { return true; } return false; } private static int[] getIntArray(String[] strArray) { int[] intArray = new int[3]; for (int i = 0; i < 3; i++) { intArray[i] = Integer.parseInt(strArray[i]); } return intArray; } private static int calcPower(int n) { return n * n; } private static int calcSumPower(int n, int m) { return calcPower(n) + calcPower(m); } }
import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner s = new Scanner(System.in); int n = s.nextInt(); for(int i = 0; i < n; i++) { int a = s.nextInt(); int b = s.nextInt(); int c = s.nextInt(); if((a * a + b * b) == c * c) { System.out.println("YES"); } else if((b * b + c * c) == a * a) { System.out.println("YES"); } else if((c * c + a * a) == b * b) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.util.*; class Main{ public static void main(String[] args){ Scanner scn = new Scanner(System.in); int n = scn.nextInt(); for(int i=0; i<n; i++){ int a,b,c; a = scn.nextInt(); b = scn.nextInt(); c = scn.nextInt(); if(Math.abs(a*a-b*b) == c*c || a*a+b*b == c*c){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.util.Scanner; class Main{ public static void main(String[] args){ Scanner sc = new Scanner(System.in); int n = sc.nextInt(); boolean[] judge = new boolean[n]; if(n > 1000) n = 1000; for(int i = 0;i < n;i++){ int a = sc.nextInt(),b = sc.nextInt(),c = sc.nextInt(); judge[i] = (a * a + b * b == c * c) || (a * a + c * c == b * b) || (b * b + c * c == a * a); } for(int i = 0;i < n;i++){ System.out.println(judge[i] ? "YES" : "NO"); } } }
import java.io.*; import java.util.*; class Main{ private static ArrayList<String> tri_check(ArrayList<Integer> a){ ArrayList<String> b = new ArrayList<String>(); for(int i = 0;i<a.size()/3;i++){ int x2,y2,z2; x2 = a.get(i*3)*a.get(i*3); y2 = a.get(i*3+1)*a.get(i*3+1); z2 = a.get(i*3+2)*a.get(i*3+2); if((x2+ y2) == z2 || (x2 + z2) == y2 || (y2 + z2) == x2)b.add("YES"); else b.add("NO"); } return b; } private static void print_tri(ArrayList<String> a){ for(int i = 0;i<a.size();i++){ System.out.println(a.get(i)); } } public static void main(String args[]) throws IOException{ ArrayList<Integer> tri = new ArrayList<Integer>(); Scanner scan = new Scanner(System.in); int a; a = Integer.parseInt(scan.next()); for(int i = a;i > 0;i--){ try{ for(int j = 0;j<3;j++){ String str1 = scan.next(); tri.add(Integer.parseInt(str1)); } } catch(NumberFormatException e){ break; } } ArrayList<String> res = new ArrayList<String>(); res = tri_check(tri); print_tri(res); } }
import java.util.Arrays; import java.util.Scanner; public class Main { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); int n = scanner.nextInt(); for(int i=0; i<n; i++) { int[] ia = new int[3]; ia[0] = scanner.nextInt(); ia[1] = scanner.nextInt(); ia[2] = scanner.nextInt(); Arrays.sort(ia); if(ia[0]*ia[0] + ia[1]*ia[1] == ia[2]*ia[2]) { System.out.println("YES"); }else { System.out.println("NO"); } } } }
import java.io.IOException; import java.io.BufferedReader; import java.io.InputStreamReader; import java.util.Scanner; import java.util.Arrays; import java.util.Collections; class Main { public static void main (String[] args) throws IOException { Scanner sc = new Scanner(System.in); int n = sc.nextInt(); StringBuilder sb = new StringBuilder(""); int[] sides = new int[3]; for (int i = 0; i < n; i++) { sides[0] = sc.nextInt(); sides[1] = sc.nextInt(); sides[2] = sc.nextInt(); Arrays.sort(sides); sb.append((sides[2] * sides[2] == sides[1] * sides[1] + sides[0] * sides[0]) ? "YES" : "NO"); sb.append('\n'); } System.out.print(sb); } }
import java.io.BufferedReader; import java.io.InputStreamReader; import java.util.*; public class Main { public static void main(String[] args) throws Exception { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int n = Integer.parseInt(br.readLine()); for(int i=0;i<n;i++){ String line = br.readLine(); String[] str = line.split(" "); int[] m = new int[3]; int max=0; for(int j=0;j<3;j++){ m[j]=Integer.parseInt(str[j]); if(m[j]>max)max=m[j]; } int tmp=0; for(int j=0;j<3;j++)if(m[j]!=max)tmp+=m[j]*m[j]; if(max*max==tmp)System.out.println("YES"); else System.out.println("NO"); } } }
import java.util.Scanner; public class Main{ public static void main(String[] args) { Scanner sc = new Scanner(System.in); int n = sc.nextInt(); for(int i=0; i<n; i++){ int a = sc.nextInt(); int b = sc.nextInt(); int c = sc.nextInt(); a = a*a; b = b*b; c = c*c; if(a == b + c || b == a + c || c == a + b ) System.out.println("YES"); else System.out.println("NO"); } } }
import java.util.*; import static java.util.Arrays.*; public class Main { static int n; static int[] edges = new int[3]; static Scanner sc = new Scanner(System.in); static void read() { for(int i = 0; i < 3; i++) { edges[i] = sc.nextInt(); } } static String solve() { sort(edges); int a,b,c; a = edges[0]; b = edges[1]; c = edges[2]; if((a * a + b * b) == (c * c)) { return "YES"; } else { return "NO"; } } public static void main(String[] args) { n = sc.nextInt(); while(n-- > 0) { read(); System.out.println(solve()); } } }
import java.util.Scanner; class Main { public static void main (String args[]) { Scanner scan = new Scanner(System.in); int N = scan.nextInt(); int a, b, c; for(int i=0; i<N; i++) { a = scan.nextInt(); b = scan.nextInt(); c = scan.nextInt(); a = a*a; b = b*b; c = c*c; if ((a == b+c) || (b == c+a) || (c == a+b)) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.io.*; import java.util.*; public class Main{ public static void main(String[] args) throws IOException{ BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int length = Integer.parseInt(br.readLine()); for(int i = 0;i<length;i++){ String[] num = br.readLine().split(" "); int a = Integer.parseInt(num[0]); int b = Integer.parseInt(num[1]); int c = Integer.parseInt(num[2]); int rightc = a*a+b*b; int rightb = a*a+c*c; int righta = b*b+c*c; if(c*c==rightc ||b*b==rightb || a*a==righta){ System.out.println("YES"); } else{ System.out.println("NO"); } } } }
import java.util.Scanner; public class Main { public static void main (String[] args) { Scanner scan = new Scanner (System.in); int n = Integer.parseInt(scan.nextLine()); String[] input; int a, b, c; for (int i = 0; i < n; i++) { input = scan.nextLine().split(" "); a = Integer.parseInt(input[0]); b = Integer.parseInt(input[1]); c = Integer.parseInt(input[2]); if (isRightTriangle(a, b, c)) { System.out.println("YES"); } else { System.out.println("NO"); } } } static boolean isRightTriangle (int a, int b, int c) { int a2 = a * a, b2 = b * b, c2 = c * c; if (a2 + b2 == c2 || a2 + c2 == b2 || b2 + c2 == a2) { return true; } return false; } }
import java.util.Scanner; public class Main{ public static void main(String[] args) { Scanner sc = new Scanner(System.in); int n = sc.nextInt(); boolean yes = false; for(int i = 0;i<n;i++){ yes = false; int x = sc.nextInt(); int y = sc.nextInt(); int z = sc.nextInt(); if(((x*x)+(y*y))==(z*z)) yes = true; else if(((z*z)+(y*y))==(x*x)) yes = true; else if(((x*x)+(z*z))==(y*y)) yes = true; if(yes) System.out.println("YES"); else System.out.println("NO"); } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Arrays; import java.util.StringTokenizer; public class Main { private StringTokenizer st; private BufferedReader bf; private int w; Main() { readData(); } private void readData() { try { bf = new BufferedReader(new InputStreamReader(System.in)); st = new StringTokenizer(bf.readLine()); int n = nextInt(); int[] a; for (int i = 0;i < n ; i++) { a = new int[3]; a[0] = nextInt(); a[1] = nextInt(); a[2] = nextInt(); Arrays.sort(a); if ((a[0]*a[0]+a[1]*a[1])==a[2]*a[2]) System.out.println("YES"); else System.out.println("NO"); } } catch (Exception e) { e.printStackTrace(); } } private int nextInt() throws IOException { return Integer.parseInt(next()); } private String next() throws IOException { if (st == null || !st.hasMoreTokens()) st = new StringTokenizer(bf.readLine()); return st.nextToken(); } public static void main(String[] args) { Main m = new Main(); } }
import java.io.BufferedReader; import java.io.InputStreamReader; public class Main { public static void main(String[] args) throws Exception { StringBuffer sb = new StringBuffer(); BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int n = Integer.parseInt(br.readLine()); double a,b,c; for(int i=0;i<n;i++){ String[] str = (br.readLine()).split(" "); a = Math.pow(Integer.parseInt(str[0]),2); b = Math.pow(Integer.parseInt(str[1]),2); c = Math.pow(Integer.parseInt(str[2]),2); if(a+b==c || a+c==b || b+c==a){ sb.append("YES\n"); } else{ sb.append("NO\n"); } } System.out.print(sb); } }
import java.io.*; import java.util.*; public class Main { public static void main(String[] args) throws Exception { Scanner sc = new Scanner(System.in); int kosu = sc.nextInt(); int hen [] = new int [3]; for(int j=0; j<kosu; j++ ){ for(int k=0; k<3; k++){ int len = sc.nextInt(); hen[k] = len*len; } Arrays.sort(hen); if((hen[0] + hen[1]) == hen[2]){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.util.Arrays; import java.util.Scanner; class Main { private static boolean isRightTriangle(int a, int b, int c) { return a * a + b * b == c * c; } private static void solve() { Scanner scanner = new Scanner(System.in); int n = scanner.nextInt(); while (n-- > 0) { int[] triangle = new int[3]; for (int i = 0; i < 3; i++) { triangle[i] = scanner.nextInt(); } Arrays.sort(triangle); if (isRightTriangle(triangle[0], triangle[1], triangle[2])) { System.out.println("YES"); } else { System.out.println("NO"); } } } public static void main(String... args) { solve(); } }
import java.util.Scanner; public class Main { static Scanner sc = new Scanner(System.in); public static void main(String[] args) { int num = sc.nextInt(); while(num-- != 0) { int[] side = new int[3]; for(int count = 0; count < 3; count++) { side[count] = (int)Math.pow(sc.nextInt(), 2); } if(side[0] == side[1] + side[2] || side[1] == side[0] + side[2] || side[2] == side[0] + side[1]) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.io.IOException; import java.util.Scanner; public class Main { public static void main(String args[]) throws IOException { Scanner sc = new Scanner(System.in); int count = Integer.parseInt(sc.nextLine()); int a = 0; int b = 0; int c = 0; String[] req; for (int i = 0; i < count; i++) { sc.hasNext(); String s = sc.nextLine(); req = s.split(" "); a = Integer.parseInt(req[0]); b = Integer.parseInt(req[1]); c = Integer.parseInt(req[2]); if (a * a + b * b == c * c || b * b + c * c == a * a || c * c + a * a == b * b) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.io.*; import java.util.ArrayList; import java.util.Collections; import java.util.Scanner; class Main { public static void main(String[] args) throws IOException { Scanner in = new Scanner(System.in); int n = in.nextInt(); for(int i=0;i<n;i++) { ArrayList<Integer>intArr = new ArrayList<Integer>(); for(int j=0;j<3;j++) intArr.add(in.nextInt()); Collections.sort(intArr); Collections.reverse(intArr); int c = intArr.get(0); int a = intArr.get(1); int b = intArr.get(2); if(a*a + b*b == c*c) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.ArrayList; import java.util.Collections; import java.util.StringTokenizer; public class Main{ public static void main(String[] args) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); try{ ArrayList<Integer> side; String line = br.readLine(); int x = Integer.parseInt(line); StringTokenizer tokens; for(int i=0;i<x;i++){ line = br.readLine(); tokens = new StringTokenizer(line); side = new ArrayList<>(); side.add(Integer.parseInt(tokens.nextToken())); side.add(Integer.parseInt(tokens.nextToken())); side.add(Integer.parseInt(tokens.nextToken())); Collections.sort(side); if(side.get(0)*side.get(0)+side.get(1)*side.get(1)==side.get(2)*side.get(2)){ System.out.println("YES"); }else{ System.out.println("NO"); } } } catch(Exception e){ System.out.println(e); } } }
import java.util.*; class Main { public static void main(String[] args) { Scanner sc = new Scanner(System.in); ArrayList<String> ynJudge = new ArrayList<>(); int N = sc.nextInt(); int sideA, sideB, sideC; int cnt = 0; for(int i = 0; i < N; i++) { sideA = sc.nextInt(); sideB = sc.nextInt(); sideC = sc.nextInt(); if(sideA * sideA == sideB * sideB + sideC * sideC || sideB * sideB == sideA * sideA + sideC * sideC || sideC * sideC == sideA * sideA + sideB * sideB) { ynJudge.add("YES"); cnt++; } else { ynJudge.add("NO"); cnt++; } } for(int i = 0; i < cnt; i++) { System.out.println(ynJudge.get(i)); } } }
import java.util.*; import java.io.*; public class Main { static IO io = new IO(); public static void main(String[] args) { int n = io.nextInt(); int l[] = new int[3]; for (int i = 0; i < n; i++) { l[0] = io.nextInt(); l[1] = io.nextInt(); l[2] = io.nextInt(); Arrays.sort(l); if (l[0]*l[0]+l[1]*l[1]==l[2]*l[2]) System.out.println("YES"); else System.out.println("NO"); } } static class IO extends PrintWriter { private final InputStream in; private final byte[] buffer = new byte[1024]; private int ptr = 0; private int buflen = 0; IO() { this(System.in); } IO(InputStream source) { super(System.out); this.in = source; } boolean hasNextByte() { if (ptr < buflen) return true; else { ptr = 0; try { buflen = in.read(buffer); } catch (IOException e) { e.printStackTrace(); } if (buflen <= 0) return false; } return true; } int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1; } boolean isPrintableChar(int c) { return 33 <= c && c <= 126; } void skipUnprintable() { while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; } boolean hasNext() { skipUnprintable(); return hasNextByte(); } long nextLong() { if (!hasNext()) throw new NoSuchElementException(); long n = 0; boolean minus = false; int b = readByte(); if (b == '-') { minus = true; b = readByte(); } if (b < '0' || '9' < b) throw new NumberFormatException(); while (true) { if ('0' <= b && b <= '9') { n *= 10; n += b - '0'; } else if (b == -1 || !isPrintableChar(b)) return minus ? -n : n; else throw new NumberFormatException(); b = readByte(); } } int nextInt() { long nl = nextLong(); if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException(); return (int) nl; } public void close() { super.close(); try { in.close(); } catch (IOException ignored) { } } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.ArrayList; import java.util.Collections; import java.util.List; public class Main { public static void main(String[] args) throws NumberFormatException, IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int lineCount = Integer.parseInt(br.readLine()); for (int i = 0; i < lineCount; i++) { String line = br.readLine(); List<Integer> sideList = new ArrayList<Integer>(); String[] input = line.split(" "); sideList.add(Integer.parseInt(input[0])); sideList.add(Integer.parseInt(input[1])); sideList.add(Integer.parseInt(input[2])); Collections.sort(sideList); if (isRightTriangle(sideList.get(2), sideList.get(1), sideList.get(0))) { System.out.println("YES"); } else { System.out.println("NO"); } } } private static boolean isRightTriangle(int side1, int side2, int side3) { return (side1 * side1 == side2 * side2 + side3 * side3); } }
import java.util.Arrays; import java.util.Scanner; public class Main { public static void main(String[] args) { try (Scanner sc = new Scanner(System.in)) { final int n = sc.nextInt(); while (sc.hasNext()) { int[] x = new int[3]; x[0] = sc.nextInt(); x[1] = sc.nextInt(); x[2] = sc.nextInt(); Arrays.sort(x); boolean isTriangle = (x[0] * x[0]) + (x[1] * x[1]) == (x[2] * x[2]); System.out.println(isTriangle ? "YES" : "NO"); } } } }
import java.io.*; public class Main{ public static int[] sort(String s[]){ int[] sides = new int[s.length]; for(int i = 0;i < s.length; i++){ sides[i] = Integer.parseInt(s[i]); } for(int j = 1;j < sides.length; j++){ if(sides[0] < sides[j]){ int n = sides[0]; sides[0] = sides[j]; sides[j] = n; } } return sides; } public static void main(String[] args)throws IOException{ BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); String str = br.readLine(); int num = Integer.parseInt(str); while(num <= 0 || num > 1000){ str = br.readLine(); num = Integer.parseInt(str); } String str1; String side[][]; side = new String[num][]; int sides[][]; sides = new int[num][]; int a = 0; while(a != num){ str1 = br.readLine(); side[a] = str1.split(" ", 3); sides[a] = sort(side[a]); a++; } for(int k = 0;k < num;k++){ if(sides[k][0]*sides[k][0] == sides[k][2]*sides[k][2] +sides[k][1]*sides[k][1]){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.util.Scanner; public class Main { public static void main(String[] args){ Scanner sc=new Scanner(System.in); int n=sc.nextInt(); for(int i=0;i<n;i++){ int a=sc.nextInt(),b=sc.nextInt(),c=sc.nextInt(); switch(biggestLength(a, b, c)){ case 'a': if(isRightTriangle(a,b,c)){ System.out.println("YES"); }else{ System.out.println("NO"); } break; case 'b': if(isRightTriangle(b, a, c)){ System.out.println("YES"); }else{ System.out.println("NO"); } break; case 'c': if(isRightTriangle(c, a, b)){ System.out.println("YES"); }else{ System.out.println("NO"); } break; } } } static char biggestLength(int a,int b,int c){ if(a<=b){ if(b<=c){ return 'c'; }else{ return 'b'; } }else if(a<=c){ return 'c'; }else{ return 'a'; } } static boolean isRightTriangle(int longest,int other1,int other2){ int longestP=longest*longest; int other1P=other1*other1; int other2P=other2*other2; return longestP==other2P+other1P; } }
import java.util.*; public class Main { public static void main(String args[] ) throws Exception { Scanner sc = new Scanner(System.in); String M = sc.nextLine(); int N = Integer.parseInt(M); for (int i=0; i<N; i++) { String[] array = sc.nextLine().split(" "); List<Integer> triangle = new ArrayList<Integer>(); triangle.add(Integer.parseInt(array[0])); triangle.add(Integer.parseInt(array[1])); triangle.add(Integer.parseInt(array[2])); Collections.sort(triangle); int A = (int)triangle.get(0); int B = (int)triangle.get(1); int C = (int)triangle.get(2); if((B*B + A*A) == C*C){ System.out.println("YES"); }else{ System.out.println("NO"); } } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.ArrayList; import java.util.List; public class Main { public static void main(String[] args) throws NumberFormatException, IOException { int countMax; int[] idata = new int[3]; String[] data; List<Boolean> list = new ArrayList<Boolean>(); BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); countMax = Integer.parseInt(reader.readLine()); for(int i = 0; i < countMax; i++){ data = reader.readLine().split(" "); for(int j = 0; j < 3; j++) idata[j] = Integer.parseInt(data[j]); for(int j = 0; j < 3; j++){ for(int k = 0; k < 3; k++){ if(idata[j] < idata[k]){ int tmp = idata[j]; idata[j] = idata[k]; idata[k] = tmp; } } } list.add(((idata[2] * idata[2]) == (idata[0] * idata[0] + idata[1] * idata[1]))); } for(Boolean bool : list) System.out.println(bool.booleanValue() ? "YES" : "NO"); } }
import java.util.Scanner; public class Main { public static void main(String args[]) { Scanner scanner = new Scanner(System.in); int num; int a, b, c; num = scanner.nextInt(); for (int i = 0; i < num; i++){ a = scanner.nextInt(); b = scanner.nextInt(); c = scanner.nextInt(); if (((Math.abs(a*a - b*b) - c*c) == 0) || (Math.abs(a*a - c*c) - b*b) == 0) { System.out.println("YES"); } else { System.out.println("NO"); } } } }
import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Arrays; public class Main { public static void main(String[] args) throws NumberFormatException, IOException { BufferedReader reader = new BufferedReader(new InputStreamReader( System.in)); StringBuilder builder = new StringBuilder(); int a = Integer.parseInt(reader.readLine()); for (int i = 0; i < a; i++) { String[] line = reader.readLine().split(" "); int[] nums = new int[3]; for (int j = 0; j < 3; j++) { nums[j] = Integer.parseInt(line[j]); } Arrays.sort(nums); if (Math.pow(nums[0], 2) + Math.pow(nums[1], 2) == Math.pow( nums[2], 2)) builder.append("YES\n"); else builder.append("NO\n"); } System.out.print(builder); } }
import java.lang.Math.*; import java.util.Scanner; import java.util.Arrays; class Main{ public static void main(String[] args){ final Scanner sc = new Scanner(System.in); int n=sc.nextInt(); int[] a=new int[3]; for(int i=0;i<n;i++){ a[0]=sc.nextInt(); a[1]=sc.nextInt(); a[2]=sc.nextInt(); Arrays.sort(a); if(Math.pow(a[2],2)==Math.pow(a[0],2)+Math.pow(a[1],2)) System.out.println("YES"); else System.out.println("NO"); } } }